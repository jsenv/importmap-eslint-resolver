{
  "version": 3,
  "file": "jsenv_importmap_eslint_resolver.cjs",
  "sources": [
    "../node_modules/@jsenv/importmap/src/isSpecifierForNodeCoreModule.js",
    "../src/internal/readImportMapFromFile.js",
    "../src/internal/importmap_resolution.js",
    "../src/resolver.js"
  ],
  "sourcesContent": [
    "// https://github.com/browserify/resolve/blob/a09a2e7f16273970be4639313c83b913daea15d7/lib/core.json#L1\n// https://nodejs.org/api/modules.html#modules_module_builtinmodules\n// https://stackoverflow.com/a/35825896\n// https://github.com/browserify/resolve/blob/master/lib/core.json#L1\n\nexport const isSpecifierForNodeCoreModule = (specifier) => {\n  return specifier.startsWith(\"node:\") || NODE_CORE_MODULE_SPECIFIERS.includes(specifier)\n}\n\nconst NODE_CORE_MODULE_SPECIFIERS = [\n  \"assert\",\n  \"assert/strict\",\n  \"async_hooks\",\n  \"buffer_ieee754\",\n  \"buffer\",\n  \"child_process\",\n  \"cluster\",\n  \"console\",\n  \"constants\",\n  \"crypto\",\n  \"_debugger\",\n  \"dgram\",\n  \"dns\",\n  \"domain\",\n  \"events\",\n  \"freelist\",\n  \"fs\",\n  \"fs/promises\",\n  \"_http_agent\",\n  \"_http_client\",\n  \"_http_common\",\n  \"_http_incoming\",\n  \"_http_outgoing\",\n  \"_http_server\",\n  \"http\",\n  \"http2\",\n  \"https\",\n  \"inspector\",\n  \"_linklist\",\n  \"module\",\n  \"net\",\n  \"node-inspect/lib/_inspect\",\n  \"node-inspect/lib/internal/inspect_client\",\n  \"node-inspect/lib/internal/inspect_repl\",\n  \"os\",\n  \"path\",\n  \"perf_hooks\",\n  \"process\",\n  \"punycode\",\n  \"querystring\",\n  \"readline\",\n  \"repl\",\n  \"smalloc\",\n  \"_stream_duplex\",\n  \"_stream_transform\",\n  \"_stream_wrap\",\n  \"_stream_passthrough\",\n  \"_stream_readable\",\n  \"_stream_writable\",\n  \"stream\",\n  \"stream/promises\",\n  \"string_decoder\",\n  \"sys\",\n  \"timers\",\n  \"_tls_common\",\n  \"_tls_legacy\",\n  \"_tls_wrap\",\n  \"tls\",\n  \"trace_events\",\n  \"tty\",\n  \"url\",\n  \"util\",\n  \"v8/tools/arguments\",\n  \"v8/tools/codemap\",\n  \"v8/tools/consarray\",\n  \"v8/tools/csvparser\",\n  \"v8/tools/logreader\",\n  \"v8/tools/profile_view\",\n  \"v8/tools/splaytree\",\n  \"v8\",\n  \"vm\",\n  \"worker_threads\",\n  \"zlib\",\n  // global is special\n  \"global\",\n]\n",
    "import { readFileSync } from \"node:fs\"\n\nimport { normalizeImportMap } from \"@jsenv/importmap\"\nimport {\n  resolveUrl,\n  urlIsInsideOf,\n  urlToFileSystemPath,\n  ensureWindowsDriveLetter,\n} from \"@jsenv/filesystem\"\n\nexport const readImportMapFromFile = ({\n  logger,\n  projectDirectoryUrl,\n  importMapFileRelativeUrl,\n}) => {\n  if (typeof importMapFileRelativeUrl === \"undefined\") {\n    return null\n  }\n\n  if (typeof importMapFileRelativeUrl !== \"string\") {\n    throw new TypeError(\n      `importMapFileRelativeUrl must be a string, got ${importMapFileRelativeUrl}`,\n    )\n  }\n  const importMapFileUrl = applyUrlResolution(\n    importMapFileRelativeUrl,\n    projectDirectoryUrl,\n  )\n\n  if (!urlIsInsideOf(importMapFileUrl, projectDirectoryUrl)) {\n    logger.warn(`import map file is outside project.\n--- import map file ---\n${urlToFileSystemPath(importMapFileUrl)}\n--- project directory ---\n${urlToFileSystemPath(projectDirectoryUrl)}`)\n  }\n\n  let importMapFileBuffer\n  const importMapFilePath = urlToFileSystemPath(importMapFileUrl)\n  try {\n    importMapFileBuffer = readFileSync(importMapFilePath)\n  } catch (e) {\n    if (e && e.code === \"ENOENT\") {\n      logger.error(`importmap file not found at ${importMapFilePath}`)\n      return null\n    }\n    throw e\n  }\n\n  let importMap\n  try {\n    const importMapFileString = String(importMapFileBuffer)\n    importMap = JSON.parse(importMapFileString)\n  } catch (e) {\n    if (e && e.code === \"SyntaxError\") {\n      logger.error(`syntax error in importmap file\n--- error stack ---\n${e.stack}\n--- importmap file ---\n${importMapFilePath}`)\n      return null\n    }\n    throw e\n  }\n\n  return normalizeImportMap(importMap, projectDirectoryUrl)\n}\n\nconst applyUrlResolution = (specifier, importer) => {\n  const url = resolveUrl(specifier, importer)\n  return ensureWindowsDriveLetter(url, importer)\n}\n",
    "import { resolveImport } from \"@jsenv/importmap\"\n\nimport { readImportMapFromFile } from \"./readImportMapFromFile.js\"\n\nexport const applyImportMapResolution = (\n  specifier,\n  { logger, projectDirectoryUrl, importMapFileRelativeUrl, importDefaultExtension, importer },\n) => {\n  const importMap = readImportMapFromFile({\n    logger,\n    projectDirectoryUrl,\n    importMapFileRelativeUrl,\n  })\n\n  try {\n    return resolveImport({\n      specifier,\n      importer,\n      // by passing importMap to null resolveImport behaves\n      // almost like new URL(specifier, importer)\n      // we want to force the importmap resolution\n      // so that bare specifiers are considered unhandled\n      // even if there is no importmap file\n      importMap: importMap || {},\n      defaultExtension: importDefaultExtension,\n    })\n  } catch (e) {\n    if (e.message.includes(\"bare specifier\")) {\n      // this is an expected error and the file cannot be found\n      logger.debug(\"unmapped bare specifier\")\n      return null\n    }\n    // this is an unexpected error\n    throw e\n  }\n}\n",
    "// https://github.com/benmosher/eslint-plugin-import/blob/master/resolvers/node/index.js\n// https://github.com/benmosher/eslint-plugin-import/tree/master/resolvers\n// https://github.com/olalonde/eslint-import-resolver-babel-root-import\n\nimport { statSync, realpathSync } from \"node:fs\"\nimport { createLogger } from \"@jsenv/logger\"\nimport {\n  assertAndNormalizeDirectoryUrl,\n  ensureWindowsDriveLetter,\n  urlIsInsideOf,\n  urlToFileSystemPath,\n  fileSystemPathToUrl,\n} from \"@jsenv/filesystem\"\nimport { isSpecifierForNodeCoreModule } from \"@jsenv/importmap/src/isSpecifierForNodeCoreModule.js\"\n\nimport { applyImportMapResolution } from \"./internal/importmap_resolution.js\"\n\nexport const interfaceVersion = 2\n\nexport const resolve = (\n  source,\n  file,\n  {\n    logLevel,\n    projectDirectoryUrl,\n    importMapFileRelativeUrl,\n    caseSensitive = true,\n    ignoreOutside = false,\n    importDefaultExtension = false,\n    node = false,\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const logger = createLogger({ logLevel })\n\n  logger.debug(`\nresolve import for project.\n--- specifier ---\n${source}\n--- importer ---\n${file}\n--- project directory path ---\n${urlToFileSystemPath(projectDirectoryUrl)}`)\n\n  if (node && isSpecifierForNodeCoreModule(source)) {\n    logger.debug(`-> native node module`)\n    return {\n      found: true,\n      path: null,\n    }\n  }\n\n  const specifier = source\n  const importer = String(fileSystemPathToUrl(file))\n\n  try {\n    let importUrl = applyImportMapResolution(specifier, {\n      logger,\n      projectDirectoryUrl,\n      importMapFileRelativeUrl,\n      importDefaultExtension,\n      importer,\n    })\n    if (!importUrl) {\n      return {\n        found: false,\n        path: null,\n      }\n    }\n\n    importUrl = ensureWindowsDriveLetter(importUrl, importer)\n\n    if (importUrl.startsWith(\"file://\")) {\n      return handleFileUrl(importUrl, {\n        logger,\n        projectDirectoryUrl,\n        ignoreOutside,\n        caseSensitive,\n      })\n    }\n\n    if (importUrl.startsWith(\"https://\") || importUrl.startsWith(\"http://\")) {\n      logger.debug(`-> consider found because of http(s) scheme ${importUrl}`)\n      return handleHttpUrl(importUrl)\n    }\n\n    if (importUrl.startsWith(\"node:\")) {\n      logger.warn(\n        `-> ${source} uses node scheme and node parameter is disabled`,\n      )\n    }\n\n    logger.debug(`-> consider not found because of scheme ${importUrl}`)\n    return handleRemainingUrl(importUrl)\n  } catch (e) {\n    logger.error(e.stack)\n    return {\n      found: false,\n      path: null,\n    }\n  }\n}\n\nconst handleFileUrl = (\n  importUrl,\n  { logger, projectDirectoryUrl, ignoreOutside, caseSensitive },\n) => {\n  const importFilePath = urlToFileSystemPath(importUrl)\n\n  if (ignoreOutside && !urlIsInsideOf(importUrl, projectDirectoryUrl)) {\n    logger.warn(`ignoring import outside project\n--- import file ---\n${importFilePath}\n--- project directory ---\n${urlToFileSystemPath(projectDirectoryUrl)}\n`)\n    return {\n      found: false,\n      path: importFilePath,\n    }\n  }\n\n  if (!pathLeadsToFile(importFilePath)) {\n    logger.debug(`-> file not found at ${importUrl}`)\n    return {\n      found: false,\n      path: importFilePath,\n    }\n  }\n\n  if (caseSensitive) {\n    const importFileRealPath = realpathSync.native(importFilePath)\n    if (importFileRealPath !== importFilePath) {\n      logger.warn(\n        `WARNING: file found at ${importFilePath} but would not be found on a case sensitive filesystem.\nThe real file path is ${importFileRealPath}.\nYou can choose to disable this warning by disabling case sensitivity.\nIf you do so keep in mind windows users would not find that file.`,\n      )\n      return {\n        found: false,\n        path: importFilePath,\n      }\n    }\n  }\n\n  logger.debug(`-> found file at ${importUrl}`)\n  return {\n    found: true,\n    path: importFilePath,\n  }\n}\n\nconst handleHttpUrl = () => {\n  // this api is synchronous we cannot check\n  // if a remote http/https file is available\n  return {\n    found: true,\n    path: null,\n  }\n}\n\nconst handleRemainingUrl = () => {\n  return {\n    found: false,\n    path: null,\n  }\n}\n\nconst pathLeadsToFile = (path) => {\n  try {\n    const stats = statSync(path)\n    return stats.isFile()\n  } catch (e) {\n    if (e && e.code === \"ENOENT\") {\n      return false\n    }\n    throw e\n  }\n}\n"
  ],
  "names": [
    "isSpecifierForNodeCoreModule",
    "specifier",
    "startsWith",
    "NODE_CORE_MODULE_SPECIFIERS",
    "includes",
    "readImportMapFromFile",
    "logger",
    "projectDirectoryUrl",
    "importMapFileRelativeUrl",
    "TypeError",
    "importMapFileUrl",
    "applyUrlResolution",
    "urlIsInsideOf",
    "warn",
    "urlToFileSystemPath",
    "importMapFileBuffer",
    "importMapFilePath",
    "readFileSync",
    "e",
    "code",
    "error",
    "importMap",
    "importMapFileString",
    "String",
    "JSON",
    "parse",
    "stack",
    "normalizeImportMap",
    "importer",
    "url",
    "resolveUrl",
    "ensureWindowsDriveLetter",
    "applyImportMapResolution",
    "importDefaultExtension",
    "resolveImport",
    "defaultExtension",
    "message",
    "debug",
    "interfaceVersion",
    "resolve",
    "source",
    "file",
    "logLevel",
    "caseSensitive",
    "ignoreOutside",
    "node",
    "assertAndNormalizeDirectoryUrl",
    "createLogger",
    "found",
    "path",
    "fileSystemPathToUrl",
    "importUrl",
    "handleFileUrl",
    "handleHttpUrl",
    "handleRemainingUrl",
    "importFilePath",
    "pathLeadsToFile",
    "importFileRealPath",
    "realpathSync",
    "native",
    "stats",
    "statSync",
    "isFile"
  ],
  "mappings": "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"
}