{
  "version": 3,
  "file": "jsenv_importmap_eslint_resolver.cjs",
  "sources": [
    "../node_modules/@jsenv/logger/src/LOG_LEVELS.js",
    "../node_modules/@jsenv/logger/src/createLogger.js",
    "../node_modules/@jsenv/logger/src/createDetailedMessage.js",
    "../node_modules/@jsenv/filesystem/src/internal/ensureUrlTrailingSlash.js",
    "../node_modules/@jsenv/filesystem/src/isFileSystemPath.js",
    "../node_modules/@jsenv/filesystem/src/fileSystemPathToUrl.js",
    "../node_modules/@jsenv/filesystem/src/assertAndNormalizeDirectoryUrl.js",
    "../node_modules/@jsenv/filesystem/src/urlToFileSystemPath.js",
    "../node_modules/@jsenv/filesystem/src/readFileSystemNodeStat.js",
    "../node_modules/@jsenv/filesystem/src/resolveUrl.js",
    "../node_modules/@jsenv/filesystem/src/ensureWindowsDriveLetter.js",
    "../node_modules/@jsenv/filesystem/src/writeSymbolicLink.js",
    "../node_modules/@jsenv/filesystem/src/urlIsInsideOf.js",
    "../node_modules/@jsenv/filesystem/src/getRealFileSystemUrlSync.js",
    "../node_modules/@jsenv/filesystem/src/readFile.js",
    "../node_modules/@jsenv/filesystem/src/internal/createWatcher.js",
    "../node_modules/@jsenv/filesystem/src/registerDirectoryLifecycle.js",
    "../node_modules/@jsenv/importmap/src/isSpecifierForNodeCoreModule.js",
    "../node_modules/@jsenv/importmap/src/internal/assertImportMap.js",
    "../node_modules/@jsenv/importmap/src/internal/hasScheme.js",
    "../node_modules/@jsenv/importmap/src/internal/urlToScheme.js",
    "../node_modules/@jsenv/importmap/src/internal/urlToPathname.js",
    "../node_modules/@jsenv/importmap/src/internal/urlToOrigin.js",
    "../node_modules/@jsenv/importmap/src/internal/pathnameToParentPathname.js",
    "../node_modules/@jsenv/importmap/src/resolveUrl.js",
    "../node_modules/@jsenv/importmap/src/internal/tryUrlResolution.js",
    "../node_modules/@jsenv/importmap/src/resolveSpecifier.js",
    "../node_modules/@jsenv/importmap/src/applyImportMap.js",
    "../node_modules/@jsenv/importmap/src/sortImportMap.js",
    "../node_modules/@jsenv/importmap/src/normalizeImportMap.js",
    "../node_modules/@jsenv/importmap/src/internal/pathnameToExtension.js",
    "../node_modules/@jsenv/importmap/src/resolveImport.js",
    "../src/internal/readImportMapFromFile.js",
    "../src/internal/importmap_resolution.js",
    "../src/resolver.js"
  ],
  "sourcesContent": [
    "export const LOG_LEVEL_OFF = \"off\"\n\nexport const LOG_LEVEL_DEBUG = \"debug\"\n\nexport const LOG_LEVEL_INFO = \"info\"\n\nexport const LOG_LEVEL_WARN = \"warn\"\n\nexport const LOG_LEVEL_ERROR = \"error\"\n",
    "import {\n  LOG_LEVEL_DEBUG,\n  LOG_LEVEL_INFO,\n  LOG_LEVEL_WARN,\n  LOG_LEVEL_ERROR,\n  LOG_LEVEL_OFF,\n} from \"./LOG_LEVELS.js\"\n\nexport const createLogger = ({ logLevel = LOG_LEVEL_INFO } = {}) => {\n  if (logLevel === LOG_LEVEL_DEBUG) {\n    return {\n      debug,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_INFO) {\n    return {\n      debug: debugDisabled,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_WARN) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_ERROR) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_OFF) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error: errorDisabled,\n    }\n  }\n\n  throw new Error(`unexpected logLevel.\n--- logLevel ---\n${logLevel}\n--- allowed log levels ---\n${LOG_LEVEL_OFF}\n${LOG_LEVEL_ERROR}\n${LOG_LEVEL_WARN}\n${LOG_LEVEL_INFO}\n${LOG_LEVEL_DEBUG}`)\n}\n\nconst debug = console.debug\n\nconst debugDisabled = () => {}\n\nconst info = console.info\n\nconst infoDisabled = () => {}\n\nconst warn = console.warn\n\nconst warnDisabled = () => {}\n\nconst error = console.error\n\nconst errorDisabled = () => {}\n\nconst disabledMethods = {\n  debug: debugDisabled,\n  info: infoDisabled,\n  warn: warnDisabled,\n  error: errorDisabled,\n}\n\nexport const loggerIsMethodEnabled = (logger, methodName) => {\n  return logger[methodName] !== disabledMethods[methodName]\n}\n\nexport const loggerToLevels = (logger) => {\n  return {\n    debug: loggerIsMethodEnabled(logger, \"debug\"),\n    info: loggerIsMethodEnabled(logger, \"info\"),\n    warn: loggerIsMethodEnabled(logger, \"warn\"),\n    error: loggerIsMethodEnabled(logger, \"error\"),\n  }\n}\n\nexport const loggerToLogLevel = (logger) => {\n  if (loggerIsMethodEnabled(logger, \"debug\")) return LOG_LEVEL_DEBUG\n  if (loggerIsMethodEnabled(logger, \"info\")) return LOG_LEVEL_INFO\n  if (loggerIsMethodEnabled(logger, \"warn\")) return LOG_LEVEL_WARN\n  if (loggerIsMethodEnabled(logger, \"error\")) return LOG_LEVEL_ERROR\n  return LOG_LEVEL_OFF\n}\n",
    "export const createDetailedMessage = (message, details = {}) => {\n  let string = `${message}`\n\n  Object.keys(details).forEach((key) => {\n    const value = details[key]\n    string += `\n--- ${key} ---\n${\n  Array.isArray(value)\n    ? value.join(`\n`)\n    : value\n}`\n  })\n\n  return string\n}\n",
    "export const ensureUrlTrailingSlash = (url) => {\n  return url.endsWith(\"/\") ? url : `${url}/`\n}\n",
    "export const isFileSystemPath = (value) => {\n  if (typeof value !== \"string\") {\n    throw new TypeError(\n      `isFileSystemPath first arg must be a string, got ${value}`,\n    )\n  }\n\n  if (value[0] === \"/\") {\n    return true\n  }\n\n  return startsWithWindowsDriveLetter(value)\n}\n\nconst startsWithWindowsDriveLetter = (string) => {\n  const firstChar = string[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n\n  const secondChar = string[1]\n  if (secondChar !== \":\") return false\n\n  return true\n}\n",
    "import { pathToFileURL } from \"url\"\nimport { isFileSystemPath } from \"./isFileSystemPath.js\"\n\nexport const fileSystemPathToUrl = (value) => {\n  if (!isFileSystemPath(value)) {\n    throw new Error(`received an invalid value for fileSystemPath: ${value}`)\n  }\n  return String(pathToFileURL(value))\n}\n",
    "import { ensureUrlTrailingSlash } from \"./internal/ensureUrlTrailingSlash.js\"\nimport { isFileSystemPath } from \"./isFileSystemPath.js\"\nimport { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\n\nexport const assertAndNormalizeDirectoryUrl = (value) => {\n  let urlString\n\n  if (value instanceof URL) {\n    urlString = value.href\n  } else if (typeof value === \"string\") {\n    if (isFileSystemPath(value)) {\n      urlString = fileSystemPathToUrl(value)\n    } else {\n      try {\n        urlString = String(new URL(value))\n      } catch (e) {\n        throw new TypeError(\n          `directoryUrl must be a valid url, received ${value}`,\n        )\n      }\n    }\n  } else {\n    throw new TypeError(\n      `directoryUrl must be a string or an url, received ${value}`,\n    )\n  }\n\n  if (!urlString.startsWith(\"file://\")) {\n    throw new Error(`directoryUrl must starts with file://, received ${value}`)\n  }\n\n  return ensureUrlTrailingSlash(urlString)\n}\n",
    "import { fileURLToPath } from \"url\"\n\nexport const urlToFileSystemPath = (url) => {\n  let urlString = String(url)\n  if (urlString[urlString.length - 1] === \"/\") {\n    // remove trailing / so that nodejs path becomes predictable otherwise it logs\n    // the trailing slash on linux but does not on windows\n    urlString = urlString.slice(0, -1)\n  }\n  const fileSystemPath = fileURLToPath(urlString)\n  return fileSystemPath\n}\n",
    "/*\n * - stats object documentation on Node.js\n *   https://nodejs.org/docs/latest-v13.x/api/fs.html#fs_class_fs_stats\n */\n\nimport { lstat, stat } from \"node:fs\"\n\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { writeFileSystemNodePermissions } from \"./writeFileSystemNodePermissions.js\"\n\nconst isWindows = process.platform === \"win32\"\n\nexport const readFileSystemNodeStat = async (\n  source,\n  { nullIfNotFound = false, followLink = true } = {},\n) => {\n  let sourceUrl = assertAndNormalizeFileUrl(source)\n  if (sourceUrl.endsWith(\"/\")) sourceUrl = sourceUrl.slice(0, -1)\n\n  const sourcePath = urlToFileSystemPath(sourceUrl)\n\n  const handleNotFoundOption = nullIfNotFound\n    ? {\n        handleNotFoundError: () => null,\n      }\n    : {}\n\n  return readStat(sourcePath, {\n    followLink,\n    ...handleNotFoundOption,\n    ...(isWindows\n      ? {\n          // Windows can EPERM on stat\n          handlePermissionDeniedError: async (error) => {\n            console.error(\n              `trying to fix windows EPERM after stats on ${sourcePath}`,\n            )\n\n            try {\n              // unfortunately it means we mutate the permissions\n              // without being able to restore them to the previous value\n              // (because reading current permission would also throw)\n              await writeFileSystemNodePermissions(sourceUrl, 0o666)\n              const stats = await readStat(sourcePath, {\n                followLink,\n                ...handleNotFoundOption,\n                // could not fix the permission error, give up and throw original error\n                handlePermissionDeniedError: () => {\n                  console.error(`still got EPERM after stats on ${sourcePath}`)\n                  throw error\n                },\n              })\n              return stats\n            } catch (e) {\n              console.error(\n                `error while trying to fix windows EPERM after stats on ${sourcePath}: ${e.stack}`,\n              )\n              throw error\n            }\n          },\n        }\n      : {}),\n  })\n}\n\nconst readStat = (\n  sourcePath,\n  {\n    followLink,\n    handleNotFoundError = null,\n    handlePermissionDeniedError = null,\n  } = {},\n) => {\n  const nodeMethod = followLink ? stat : lstat\n\n  return new Promise((resolve, reject) => {\n    nodeMethod(sourcePath, (error, statsObject) => {\n      if (error) {\n        if (handleNotFoundError && error.code === \"ENOENT\") {\n          resolve(handleNotFoundError(error))\n        } else if (\n          handlePermissionDeniedError &&\n          (error.code === \"EPERM\" || error.code === \"EACCES\")\n        ) {\n          resolve(handlePermissionDeniedError(error))\n        } else {\n          reject(error)\n        }\n      } else {\n        resolve(statsObject)\n      }\n    })\n  })\n}\n",
    "export const resolveUrl = (specifier, baseUrl) => {\n  if (typeof baseUrl === \"undefined\") {\n    throw new TypeError(`baseUrl missing to resolve ${specifier}`)\n  }\n\n  return String(new URL(specifier, baseUrl))\n}\n",
    "import { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\n\nconst isWindows = process.platform === \"win32\"\nconst baseUrlFallback = fileSystemPathToUrl(process.cwd())\n\n/**\n * Some url might be resolved or remapped to url without the windows drive letter.\n * For instance\n * new URL('/foo.js', 'file:///C:/dir/file.js')\n * resolves to\n * 'file:///foo.js'\n *\n * But on windows it becomes a problem because we need the drive letter otherwise\n * url cannot be converted to a filesystem path.\n *\n * ensureWindowsDriveLetter ensure a resolved url still contains the drive letter.\n */\n\nexport const ensureWindowsDriveLetter = (url, baseUrl) => {\n  try {\n    url = String(new URL(url))\n  } catch (e) {\n    throw new Error(`absolute url expected but got ${url}`)\n  }\n\n  if (!isWindows) {\n    return url\n  }\n\n  try {\n    baseUrl = String(new URL(baseUrl))\n  } catch (e) {\n    throw new Error(\n      `absolute baseUrl expected but got ${baseUrl} to ensure windows drive letter on ${url}`,\n    )\n  }\n\n  if (!url.startsWith(\"file://\")) {\n    return url\n  }\n  const afterProtocol = url.slice(\"file://\".length)\n  // we still have the windows drive letter\n  if (extractDriveLetter(afterProtocol)) {\n    return url\n  }\n\n  // drive letter was lost, restore it\n  const baseUrlOrFallback = baseUrl.startsWith(\"file://\")\n    ? baseUrl\n    : baseUrlFallback\n  const driveLetter = extractDriveLetter(\n    baseUrlOrFallback.slice(\"file://\".length),\n  )\n  if (!driveLetter) {\n    throw new Error(\n      `drive letter expected on baseUrl but got ${baseUrl} to ensure windows drive letter on ${url}`,\n    )\n  }\n  return `file:///${driveLetter}:${afterProtocol}`\n}\n\nconst extractDriveLetter = (ressource) => {\n  // we still have the windows drive letter\n  if (/[a-zA-Z]/.test(ressource[1]) && ressource[2] === \":\") {\n    return ressource[1]\n  }\n  return null\n}\n",
    "import { promises } from \"node:fs\"\n\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { isFileSystemPath } from \"./isFileSystemPath.js\"\nimport { ensureParentDirectories } from \"./ensureParentDirectories.js\"\nimport { readFileSystemNodeStat } from \"./readFileSystemNodeStat.js\"\nimport { readSymbolicLink } from \"./readSymbolicLink.js\"\nimport { removeFileSystemNode } from \"./removeFileSystemNode.js\"\n\n// https://nodejs.org/dist/latest-v13.x/docs/api/fs.html#fs_fspromises_symlink_target_path_type\nconst { symlink } = promises\nconst isWindows = process.platform === \"win32\"\n\n/**\n * Writes a symbolic link pointing from a filesystem node to an other\n * @param {string} from Where symlink is written\n * @param {string} to The symlink target\n * @param {\"file\" | \"dir\"} [type] Symlink type if you know it before hand\n * @param {boolean} [allowUseless=false] Prevent error when symlink already exists with the same target\n * @param {boolean} [allowOverwrite=false] Will replace any existing symlink\n */\nexport const writeSymbolicLink = async ({\n  from,\n  to,\n  type,\n  allowUseless = false,\n  allowOverwrite = false,\n}) => {\n  const fromUrl = assertAndNormalizeFileUrl(from)\n  const toInfo = getToInfo(to, fromUrl)\n  // Node.js doc at https://nodejs.org/api/fs.html#fssymlinktarget-path-type-callback\n  // states the following:\n  // \"If the type argument is not set, Node.js will autodetect\n  // target type and use 'file' or 'dir'\"\n  // In practice, if code don't specify \"type\" on windows, you later get EPERM errors\n  // when doing operation on the symlink such as \"fs.stat\"\n  if (isWindows && typeof type === \"undefined\") {\n    const toStats = await readFileSystemNodeStat(toInfo.url, {\n      nullIfNotFound: true,\n    })\n    type = toStats && toStats.isDirectory() ? \"dir\" : \"file\"\n  }\n  const symbolicLinkPath = urlToFileSystemPath(fromUrl)\n  try {\n    await symlink(toInfo.value, symbolicLinkPath, type)\n  } catch (error) {\n    if (error.code === \"ENOENT\") {\n      await ensureParentDirectories(fromUrl)\n      await symlink(toInfo.value, symbolicLinkPath, type)\n      return\n    }\n    if (error.code === \"EEXIST\") {\n      if (allowUseless) {\n        const existingSymbolicLinkUrl = await readSymbolicLink(fromUrl)\n        if (existingSymbolicLinkUrl === toInfo.url) {\n          return\n        }\n      }\n      if (allowOverwrite) {\n        await removeFileSystemNode(fromUrl)\n        await symlink(toInfo.value, symbolicLinkPath, type)\n        return\n      }\n    }\n    throw error\n  }\n}\n\nconst getToInfo = (to, fromUrl) => {\n  if (typeof to === \"string\") {\n    // absolute filesystem path\n    if (isFileSystemPath(to)) {\n      const url = fileSystemPathToUrl(to)\n      const value = to\n      return {\n        url,\n        value,\n      }\n    }\n\n    // relative url\n    if (to.startsWith(\"./\") || to.startsWith(\"../\")) {\n      const url = resolveUrl(to, fromUrl)\n      const value = to\n      return {\n        url,\n        value,\n      }\n    }\n\n    // absolute url\n    const url = resolveUrl(to, fromUrl)\n    const value = urlToFileSystemPath(url)\n    return {\n      url,\n      value,\n    }\n  }\n\n  if (to instanceof URL) {\n    const url = String(to)\n    const value = urlToFileSystemPath(url)\n    return {\n      url,\n      value,\n    }\n  }\n\n  throw new TypeError(\n    `symbolic link to must be a string or an url, received ${to}`,\n  )\n}\n",
    "export const urlIsInsideOf = (url, otherUrl) => {\n  const urlObject = new URL(url)\n  const otherUrlObject = new URL(otherUrl)\n\n  if (urlObject.origin !== otherUrlObject.origin) {\n    return false\n  }\n\n  const urlPathname = urlObject.pathname\n  const otherUrlPathname = otherUrlObject.pathname\n  if (urlPathname === otherUrlPathname) {\n    return false\n  }\n\n  const isInside = urlPathname.startsWith(otherUrlPathname)\n  return isInside\n}\n",
    "import { readdirSync, realpathSync } from \"node:fs\"\n\nimport { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\n\nexport const getRealFileSystemUrlSync = (\n  fileUrl,\n  { followLink = true } = {},\n) => {\n  const pathname = new URL(fileUrl).pathname\n  const parts = pathname.slice(1).split(\"/\")\n  let reconstructedFileUrl = `file:///`\n  if (process.platform === \"win32\") {\n    const windowsDriveLetter = parts.shift()\n    reconstructedFileUrl += `${windowsDriveLetter}/`\n  }\n  let i = 0\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const name = parts[i]\n    i++\n    let namesOnFileSystem\n    try {\n      namesOnFileSystem = readdirSync(\n        // When Node.js receives \"C:/\" on windows it returns\n        // the process.cwd() directory content...\n        // This can be fixed by passing \"file:///C:/\" directly but as a url object\n        new URL(reconstructedFileUrl),\n      )\n    } catch (e) {\n      if (e && e.code === \"ENOENT\") {\n        return null\n      }\n      throw e\n    }\n    const foundOnFilesystem = namesOnFileSystem.includes(name)\n    if (foundOnFilesystem) {\n      reconstructedFileUrl += name\n    } else {\n      const nameOnFileSystem = namesOnFileSystem.find(\n        (nameCandidate) => nameCandidate.toLowerCase() === name.toLowerCase(),\n      )\n      if (!nameOnFileSystem) {\n        return null\n      }\n      reconstructedFileUrl += nameOnFileSystem\n    }\n    if (i === parts.length) {\n      if (followLink) {\n        const realPath = realpathSync.native(\n          urlToFileSystemPath(reconstructedFileUrl),\n        )\n        return fileSystemPathToUrl(realPath)\n      }\n      return reconstructedFileUrl\n    }\n    reconstructedFileUrl += \"/\"\n  }\n}\n",
    "import { promisify } from \"util\"\nimport { readFile as readFileNode } from \"fs\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\n\nconst readFilePromisified = promisify(readFileNode)\nexport const readFile = async (value, { as = \"string\" } = {}) => {\n  const fileUrl = assertAndNormalizeFileUrl(value)\n  const filePath = urlToFileSystemPath(fileUrl)\n  const buffer = await readFilePromisified(filePath)\n  if (as === \"buffer\") {\n    return buffer\n  }\n  if (as === \"string\") {\n    return buffer.toString()\n  }\n  if (as === \"json\") {\n    return JSON.parse(buffer.toString())\n  }\n  throw new Error(`as must be one of buffer,string,json, received ${as}.`)\n}\n",
    "import { watch, openSync, closeSync } from \"fs\"\n\nconst isWindows = process.platform === \"win32\"\n\nexport const createWatcher = (sourcePath, options) => {\n  const watcher = watch(sourcePath, options)\n\n  if (isWindows) {\n    watcher.on(\"error\", async (error) => {\n      // https://github.com/joyent/node/issues/4337\n      if (error.code === \"EPERM\") {\n        try {\n          const fd = openSync(sourcePath, \"r\")\n          closeSync(fd)\n        } catch (e) {\n          if (e.code === \"ENOENT\") {\n            return\n          }\n          console.error(`error while fixing windows eperm: ${e.stack}`)\n          throw error\n        }\n      } else {\n        throw error\n      }\n    })\n  }\n\n  return watcher\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport { readdirSync } from \"fs\"\nimport {\n  normalizeStructuredMetaMap,\n  urlCanContainsMetaMatching,\n  urlToMeta,\n} from \"@jsenv/url-meta\"\nimport { replaceBackSlashesWithSlashes } from \"./internal/replaceBackSlashesWithSlashes.js\"\nimport { fileSystemNodeToTypeOrNull } from \"./internal/fileSystemNodeToTypeOrNull.js\"\nimport { createWatcher } from \"./internal/createWatcher.js\"\nimport { trackRessources } from \"./internal/trackRessources.js\"\nimport { ensureUrlTrailingSlash } from \"./internal/ensureUrlTrailingSlash.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { urlToRelativeUrl } from \"./urlToRelativeUrl.js\"\n\nconst isLinux = process.platform === \"linux\"\n// linux does not support recursive option\nconst fsWatchSupportsRecursive = !isLinux\n\nexport const registerDirectoryLifecycle = (\n  source,\n  {\n    added,\n    updated,\n    removed,\n    watchDescription = {\n      \"./**/*\": true,\n    },\n    notifyExistent = false,\n    keepProcessAlive = true,\n    recursive = false,\n  },\n) => {\n  const sourceUrl = ensureUrlTrailingSlash(assertAndNormalizeFileUrl(source))\n  if (!undefinedOrFunction(added)) {\n    throw new TypeError(`added must be a function or undefined, got ${added}`)\n  }\n  if (!undefinedOrFunction(updated)) {\n    throw new TypeError(\n      `updated must be a function or undefined, got ${updated}`,\n    )\n  }\n  if (!undefinedOrFunction(removed)) {\n    throw new TypeError(\n      `removed must be a function or undefined, got ${removed}`,\n    )\n  }\n\n  const structuredMetaMap = normalizeStructuredMetaMap(\n    { watch: watchDescription },\n    sourceUrl,\n  )\n  const entryShouldBeWatched = ({ relativeUrl, type }) => {\n    const entryUrl = resolveUrl(relativeUrl, sourceUrl)\n\n    if (type === \"directory\") {\n      const canContainEntryToWatch = urlCanContainsMetaMatching({\n        url: `${entryUrl}/`,\n        structuredMetaMap,\n        predicate: ({ watch }) => watch,\n      })\n      return canContainEntryToWatch\n    }\n\n    const entryMeta = urlToMeta({\n      url: entryUrl,\n      structuredMetaMap,\n    })\n\n    return entryMeta.watch\n  }\n\n  const tracker = trackRessources()\n\n  const contentMap = new Map()\n\n  const handleDirectoryEvent = ({\n    directoryRelativeUrl,\n    filename,\n    eventType,\n  }) => {\n    if (filename) {\n      if (directoryRelativeUrl) {\n        handleChange(`${directoryRelativeUrl}/${filename}`)\n      } else {\n        handleChange(`${filename}`)\n      }\n    } else if ((removed || added) && eventType === \"rename\") {\n      // we might receive `rename` without filename\n      // in that case we try to find ourselves which file was removed.\n\n      let relativeUrlCandidateArray = Array.from(contentMap.keys())\n\n      if (recursive && !fsWatchSupportsRecursive) {\n        relativeUrlCandidateArray = relativeUrlCandidateArray.filter(\n          (relativeUrlCandidate) => {\n            if (!directoryRelativeUrl) {\n              // ensure entry is top level\n              if (relativeUrlCandidate.includes(\"/\")) return false\n              return true\n            }\n\n            // entry not inside this directory\n            if (!relativeUrlCandidate.startsWith(directoryRelativeUrl))\n              return false\n\n            const afterDirectory = relativeUrlCandidate.slice(\n              directoryRelativeUrl.length + 1,\n            )\n            // deep inside this directory\n            if (afterDirectory.includes(\"/\")) return false\n\n            return true\n          },\n        )\n      }\n\n      const removedEntryRelativeUrl = relativeUrlCandidateArray.find(\n        (relativeUrlCandidate) => {\n          const entryUrl = resolveUrl(relativeUrlCandidate, sourceUrl)\n          const type = fileSystemNodeToTypeOrNull(entryUrl)\n          return type === null\n        },\n      )\n\n      if (removedEntryRelativeUrl) {\n        handleEntryLost({\n          relativeUrl: removedEntryRelativeUrl,\n          type: contentMap.get(removedEntryRelativeUrl),\n        })\n      }\n    }\n  }\n\n  const handleChange = (relativeUrl) => {\n    const entryUrl = resolveUrl(relativeUrl, sourceUrl)\n    const previousType = contentMap.get(relativeUrl)\n    const type = fileSystemNodeToTypeOrNull(entryUrl)\n\n    if (!entryShouldBeWatched({ relativeUrl, type })) {\n      return\n    }\n\n    // it's something new\n    if (!previousType) {\n      if (type !== null) {\n        handleEntryFound({ relativeUrl, type, existent: false })\n      }\n      return\n    }\n\n    // it existed but now it's not here anymore\n    if (type === null) {\n      handleEntryLost({ relativeUrl, type: previousType })\n      return\n    }\n\n    // it existed and was replaced by something else\n    // we don't handle this as an update. We rather say the ressource\n    // is lost and something else is found (call removed() then added())\n    if (previousType !== type) {\n      handleEntryLost({ relativeUrl, type: previousType })\n      handleEntryFound({ relativeUrl, type })\n      return\n    }\n\n    // a directory cannot really be updated in way that matters for us\n    // filesystem is trying to tell us the directory content have changed\n    // but we don't care about that\n    // we'll already be notified about what has changed\n    if (type === \"directory\") {\n      return\n    }\n\n    // something has changed at this relativeUrl (the file existed and was not deleted)\n    // it's possible to get there and there is no real update\n    // (file content is the same and file mtime is the same).\n    // In short filesystem is sometimes \"lying\"\n    // Not trying to guard against that because:\n    // - hurt perfs a lot\n    // - it happens very rarely\n    // - it's not really a concern in practice\n    // - filesystem did not send an event out of nowhere:\n    // something occured but we don't know what with the information we have.\n    if (updated) {\n      updated({ relativeUrl, type })\n    }\n  }\n\n  const handleEntryFound = ({ relativeUrl, type, existent }) => {\n    if (!entryShouldBeWatched({ relativeUrl, type })) {\n      return\n    }\n\n    contentMap.set(relativeUrl, type)\n\n    const entryUrl = resolveUrl(relativeUrl, sourceUrl)\n\n    if (type === \"directory\") {\n      visitDirectory({\n        directoryUrl: `${entryUrl}/`,\n        entryFound: (entry) => {\n          handleEntryFound({\n            relativeUrl: `${relativeUrl}/${entry.relativeUrl}`,\n            type: entry.type,\n            existent,\n          })\n        },\n      })\n    }\n\n    if (added) {\n      if (existent) {\n        if (notifyExistent) {\n          added({ relativeUrl, type, existent: true })\n        }\n      } else {\n        added({ relativeUrl, type })\n      }\n    }\n\n    // we must watch manually every directory we find\n    if (!fsWatchSupportsRecursive && type === \"directory\") {\n      const watcher = createWatcher(urlToFileSystemPath(entryUrl), {\n        persistent: keepProcessAlive,\n      })\n      tracker.registerCleanupCallback(() => {\n        watcher.close()\n      })\n      watcher.on(\"change\", (eventType, filename) => {\n        handleDirectoryEvent({\n          directoryRelativeUrl: relativeUrl,\n          filename: filename ? replaceBackSlashesWithSlashes(filename) : \"\",\n          eventType,\n        })\n      })\n    }\n  }\n\n  const handleEntryLost = ({ relativeUrl, type }) => {\n    contentMap.delete(relativeUrl)\n    if (removed) {\n      removed({ relativeUrl, type })\n    }\n  }\n\n  visitDirectory({\n    directoryUrl: sourceUrl,\n    entryFound: ({ relativeUrl, type }) => {\n      handleEntryFound({ relativeUrl, type, existent: true })\n    },\n  })\n\n  const watcher = createWatcher(urlToFileSystemPath(sourceUrl), {\n    recursive: recursive && fsWatchSupportsRecursive,\n    persistent: keepProcessAlive,\n  })\n  tracker.registerCleanupCallback(() => {\n    watcher.close()\n  })\n  watcher.on(\"change\", (eventType, fileSystemPath) => {\n    handleDirectoryEvent({\n      ...fileSystemPathToDirectoryRelativeUrlAndFilename(fileSystemPath),\n      eventType,\n    })\n  })\n\n  return tracker.cleanup\n}\n\nconst undefinedOrFunction = (value) =>\n  typeof value === \"undefined\" || typeof value === \"function\"\n\nconst visitDirectory = ({ directoryUrl, entryFound }) => {\n  const directoryPath = urlToFileSystemPath(directoryUrl)\n  readdirSync(directoryPath).forEach((entry) => {\n    const entryUrl = resolveUrl(entry, directoryUrl)\n    const type = fileSystemNodeToTypeOrNull(entryUrl)\n    if (type === null) {\n      return\n    }\n\n    const relativeUrl = urlToRelativeUrl(entryUrl, directoryUrl)\n    entryFound({\n      relativeUrl,\n      type,\n    })\n  })\n}\n\nconst fileSystemPathToDirectoryRelativeUrlAndFilename = (path) => {\n  if (!path) {\n    return {\n      directoryRelativeUrl: \"\",\n      filename: \"\",\n    }\n  }\n\n  const normalizedPath = replaceBackSlashesWithSlashes(path)\n  const slashLastIndex = normalizedPath.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) {\n    return {\n      directoryRelativeUrl: \"\",\n      filename: normalizedPath,\n    }\n  }\n\n  const directoryRelativeUrl = normalizedPath.slice(0, slashLastIndex)\n  const filename = normalizedPath.slice(slashLastIndex + 1)\n  return {\n    directoryRelativeUrl,\n    filename,\n  }\n}\n",
    "// https://github.com/browserify/resolve/blob/a09a2e7f16273970be4639313c83b913daea15d7/lib/core.json#L1\n// https://nodejs.org/api/modules.html#modules_module_builtinmodules\n// https://stackoverflow.com/a/35825896\n// https://github.com/browserify/resolve/blob/master/lib/core.json#L1\n\nexport const isSpecifierForNodeCoreModule = (specifier) => {\n  return (\n    specifier.startsWith(\"node:\") ||\n    NODE_CORE_MODULE_SPECIFIERS.includes(specifier)\n  )\n}\n\nconst NODE_CORE_MODULE_SPECIFIERS = [\n  \"assert\",\n  \"assert/strict\",\n  \"async_hooks\",\n  \"buffer_ieee754\",\n  \"buffer\",\n  \"child_process\",\n  \"cluster\",\n  \"console\",\n  \"constants\",\n  \"crypto\",\n  \"_debugger\",\n  \"dgram\",\n  \"dns\",\n  \"domain\",\n  \"events\",\n  \"freelist\",\n  \"fs\",\n  \"fs/promises\",\n  \"_http_agent\",\n  \"_http_client\",\n  \"_http_common\",\n  \"_http_incoming\",\n  \"_http_outgoing\",\n  \"_http_server\",\n  \"http\",\n  \"http2\",\n  \"https\",\n  \"inspector\",\n  \"_linklist\",\n  \"module\",\n  \"net\",\n  \"node-inspect/lib/_inspect\",\n  \"node-inspect/lib/internal/inspect_client\",\n  \"node-inspect/lib/internal/inspect_repl\",\n  \"os\",\n  \"path\",\n  \"perf_hooks\",\n  \"process\",\n  \"punycode\",\n  \"querystring\",\n  \"readline\",\n  \"repl\",\n  \"smalloc\",\n  \"_stream_duplex\",\n  \"_stream_transform\",\n  \"_stream_wrap\",\n  \"_stream_passthrough\",\n  \"_stream_readable\",\n  \"_stream_writable\",\n  \"stream\",\n  \"stream/promises\",\n  \"string_decoder\",\n  \"sys\",\n  \"timers\",\n  \"_tls_common\",\n  \"_tls_legacy\",\n  \"_tls_wrap\",\n  \"tls\",\n  \"trace_events\",\n  \"tty\",\n  \"url\",\n  \"util\",\n  \"v8/tools/arguments\",\n  \"v8/tools/codemap\",\n  \"v8/tools/consarray\",\n  \"v8/tools/csvparser\",\n  \"v8/tools/logreader\",\n  \"v8/tools/profile_view\",\n  \"v8/tools/splaytree\",\n  \"v8\",\n  \"vm\",\n  \"worker_threads\",\n  \"zlib\",\n  // global is special\n  \"global\",\n]\n",
    "export const assertImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`an importMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`an importMap must be an object, received ${value}`)\n  }\n\n  if (Array.isArray(value)) {\n    throw new TypeError(\n      `an importMap must be an object, received array ${value}`,\n    )\n  }\n}\n",
    "export const hasScheme = (string) => {\n  return /^[a-zA-Z]{2,}:/.test(string)\n}\n",
    "export const urlToScheme = (urlString) => {\n  const colonIndex = urlString.indexOf(\":\")\n  if (colonIndex === -1) return \"\"\n  return urlString.slice(0, colonIndex)\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToPathname = (urlString) => {\n  return ressourceToPathname(urlToRessource(urlString))\n}\n\nconst urlToRessource = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return urlString.slice(\"file://\".length)\n  }\n\n  if (scheme === \"https\" || scheme === \"http\") {\n    // remove origin\n    const afterProtocol = urlString.slice(scheme.length + \"://\".length)\n    const pathnameSlashIndex = afterProtocol.indexOf(\"/\", \"://\".length)\n    return afterProtocol.slice(pathnameSlashIndex)\n  }\n\n  return urlString.slice(scheme.length + 1)\n}\n\nconst ressourceToPathname = (ressource) => {\n  const searchSeparatorIndex = ressource.indexOf(\"?\")\n  return searchSeparatorIndex === -1\n    ? ressource\n    : ressource.slice(0, searchSeparatorIndex)\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToOrigin = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return \"file://\"\n  }\n\n  if (scheme === \"http\" || scheme === \"https\") {\n    const secondProtocolSlashIndex = scheme.length + \"://\".length\n    const pathnameSlashIndex = urlString.indexOf(\"/\", secondProtocolSlashIndex)\n\n    if (pathnameSlashIndex === -1) return urlString\n    return urlString.slice(0, pathnameSlashIndex)\n  }\n\n  return urlString.slice(0, scheme.length + 1)\n}\n",
    "export const pathnameToParentPathname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) {\n    return \"/\"\n  }\n\n  return pathname.slice(0, slashLastIndex + 1)\n}\n",
    "// could be useful: https://url.spec.whatwg.org/#url-miscellaneous\n\nimport { urlToScheme } from \"./internal/urlToScheme.js\"\nimport { urlToPathname } from \"./internal/urlToPathname.js\"\nimport { urlToOrigin } from \"./internal/urlToOrigin.js\"\nimport { pathnameToParentPathname } from \"./internal/pathnameToParentPathname.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\n\nexport const resolveUrl = (specifier, baseUrl) => {\n  if (baseUrl) {\n    if (typeof baseUrl !== \"string\") {\n      throw new TypeError(writeBaseUrlMustBeAString({ baseUrl, specifier }))\n    }\n    if (!hasScheme(baseUrl)) {\n      throw new Error(writeBaseUrlMustBeAbsolute({ baseUrl, specifier }))\n    }\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  if (!baseUrl) {\n    throw new Error(writeBaseUrlRequired({ baseUrl, specifier }))\n  }\n\n  // scheme relative\n  if (specifier.slice(0, 2) === \"//\") {\n    return `${urlToScheme(baseUrl)}:${specifier}`\n  }\n\n  // origin relative\n  if (specifier[0] === \"/\") {\n    return `${urlToOrigin(baseUrl)}${specifier}`\n  }\n\n  const baseOrigin = urlToOrigin(baseUrl)\n  const basePathname = urlToPathname(baseUrl)\n\n  if (specifier === \".\") {\n    const baseDirectoryPathname = pathnameToParentPathname(basePathname)\n    return `${baseOrigin}${baseDirectoryPathname}`\n  }\n\n  // pathname relative inside\n  if (specifier.slice(0, 2) === \"./\") {\n    const baseDirectoryPathname = pathnameToParentPathname(basePathname)\n    return `${baseOrigin}${baseDirectoryPathname}${specifier.slice(2)}`\n  }\n\n  // pathname relative outside\n  if (specifier.slice(0, 3) === \"../\") {\n    let unresolvedPathname = specifier\n    const importerFolders = basePathname.split(\"/\")\n    importerFolders.pop()\n\n    while (unresolvedPathname.slice(0, 3) === \"../\") {\n      unresolvedPathname = unresolvedPathname.slice(3)\n      // when there is no folder left to resolved\n      // we just ignore '../'\n      if (importerFolders.length) {\n        importerFolders.pop()\n      }\n    }\n\n    const resolvedPathname = `${importerFolders.join(\n      \"/\",\n    )}/${unresolvedPathname}`\n    return `${baseOrigin}${resolvedPathname}`\n  }\n\n  // bare\n  if (basePathname === \"\") {\n    return `${baseOrigin}/${specifier}`\n  }\n  if (basePathname[basePathname.length] === \"/\") {\n    return `${baseOrigin}${basePathname}${specifier}`\n  }\n  return `${baseOrigin}${pathnameToParentPathname(basePathname)}${specifier}`\n}\n\nconst writeBaseUrlMustBeAString = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlMustBeAbsolute = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl must be absolute.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlRequired = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl required to resolve relative specifier.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n",
    "import { hasScheme } from \"./hasScheme.js\"\nimport { resolveUrl } from \"../resolveUrl.js\"\n\nexport const tryUrlResolution = (string, url) => {\n  const result = resolveUrl(string, url)\n  return hasScheme(result) ? result : null\n}\n",
    "import { hasScheme } from \"./internal/hasScheme.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\n\nexport const resolveSpecifier = (specifier, importer) => {\n  if (\n    specifier === \".\" ||\n    specifier[0] === \"/\" ||\n    specifier.startsWith(\"./\") ||\n    specifier.startsWith(\"../\")\n  ) {\n    return resolveUrl(specifier, importer)\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  return null\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\nimport { tryUrlResolution } from \"./internal/tryUrlResolution.js\"\nimport { resolveSpecifier } from \"./resolveSpecifier.js\"\n\nexport const applyImportMap = ({\n  importMap,\n  specifier,\n  importer,\n  createBareSpecifierError = ({ specifier, importer }) => {\n    return new Error(\n      createDetailedMessage(`Unmapped bare specifier.`, {\n        specifier,\n        importer,\n      }),\n    )\n  },\n  onImportMapping = () => {},\n}) => {\n  assertImportMap(importMap)\n  if (typeof specifier !== \"string\") {\n    throw new TypeError(\n      createDetailedMessage(\"specifier must be a string.\", {\n        specifier,\n        importer,\n      }),\n    )\n  }\n  if (importer) {\n    if (typeof importer !== \"string\") {\n      throw new TypeError(\n        createDetailedMessage(\"importer must be a string.\", {\n          importer,\n          specifier,\n        }),\n      )\n    }\n    if (!hasScheme(importer)) {\n      throw new Error(\n        createDetailedMessage(`importer must be an absolute url.`, {\n          importer,\n          specifier,\n        }),\n      )\n    }\n  }\n\n  const specifierUrl = resolveSpecifier(specifier, importer)\n  const specifierNormalized = specifierUrl || specifier\n\n  const { scopes } = importMap\n  if (scopes && importer) {\n    const scopeSpecifierMatching = Object.keys(scopes).find(\n      (scopeSpecifier) => {\n        return (\n          scopeSpecifier === importer ||\n          specifierIsPrefixOf(scopeSpecifier, importer)\n        )\n      },\n    )\n    if (scopeSpecifierMatching) {\n      const scopeMappings = scopes[scopeSpecifierMatching]\n      const mappingFromScopes = applyMappings(\n        scopeMappings,\n        specifierNormalized,\n        scopeSpecifierMatching,\n        onImportMapping,\n      )\n      if (mappingFromScopes !== null) {\n        return mappingFromScopes\n      }\n    }\n  }\n\n  const { imports } = importMap\n  if (imports) {\n    const mappingFromImports = applyMappings(\n      imports,\n      specifierNormalized,\n      undefined,\n      onImportMapping,\n    )\n    if (mappingFromImports !== null) {\n      return mappingFromImports\n    }\n  }\n\n  if (specifierUrl) {\n    return specifierUrl\n  }\n\n  throw createBareSpecifierError({ specifier, importer })\n}\n\nconst applyMappings = (\n  mappings,\n  specifierNormalized,\n  scope,\n  onImportMapping,\n) => {\n  const specifierCandidates = Object.keys(mappings)\n\n  let i = 0\n  while (i < specifierCandidates.length) {\n    const specifierCandidate = specifierCandidates[i]\n    i++\n    if (specifierCandidate === specifierNormalized) {\n      const address = mappings[specifierCandidate]\n      onImportMapping({\n        scope,\n        from: specifierCandidate,\n        to: address,\n        before: specifierNormalized,\n        after: address,\n      })\n      return address\n    }\n    if (specifierIsPrefixOf(specifierCandidate, specifierNormalized)) {\n      const address = mappings[specifierCandidate]\n      const afterSpecifier = specifierNormalized.slice(\n        specifierCandidate.length,\n      )\n      const addressFinal = tryUrlResolution(afterSpecifier, address)\n      onImportMapping({\n        scope,\n        from: specifierCandidate,\n        to: address,\n        before: specifierNormalized,\n        after: addressFinal,\n      })\n      return addressFinal\n    }\n  }\n\n  return null\n}\n\nconst specifierIsPrefixOf = (specifierHref, href) => {\n  return (\n    specifierHref[specifierHref.length - 1] === \"/\" &&\n    href.startsWith(specifierHref)\n  )\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\n\nexport const sortImportMap = (importMap) => {\n  assertImportMap(importMap)\n\n  const { imports, scopes } = importMap\n\n  return {\n    ...(imports ? { imports: sortImports(imports) } : {}),\n    ...(scopes ? { scopes: sortScopes(scopes) } : {}),\n  }\n}\n\nexport const sortImports = (imports) => {\n  const mappingsSorted = {}\n\n  Object.keys(imports)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((name) => {\n      mappingsSorted[name] = imports[name]\n    })\n\n  return mappingsSorted\n}\n\nexport const sortScopes = (scopes) => {\n  const scopesSorted = {}\n\n  Object.keys(scopes)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((scopeSpecifier) => {\n      scopesSorted[scopeSpecifier] = sortImports(scopes[scopeSpecifier])\n    })\n\n  return scopesSorted\n}\n\nconst compareLengthOrLocaleCompare = (a, b) => {\n  return b.length - a.length || a.localeCompare(b)\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { tryUrlResolution } from \"./internal/tryUrlResolution.js\"\nimport { resolveSpecifier } from \"./resolveSpecifier.js\"\nimport { sortImports, sortScopes } from \"./sortImportMap.js\"\n\nexport const normalizeImportMap = (importMap, baseUrl) => {\n  assertImportMap(importMap)\n\n  if (!isStringOrUrl(baseUrl)) {\n    throw new TypeError(formulateBaseUrlMustBeStringOrUrl({ baseUrl }))\n  }\n\n  const { imports, scopes } = importMap\n\n  return {\n    imports: imports ? normalizeMappings(imports, baseUrl) : undefined,\n    scopes: scopes ? normalizeScopes(scopes, baseUrl) : undefined,\n  }\n}\n\nconst isStringOrUrl = (value) => {\n  if (typeof value === \"string\") {\n    return true\n  }\n\n  if (typeof URL === \"function\" && value instanceof URL) {\n    return true\n  }\n\n  return false\n}\n\nconst normalizeMappings = (mappings, baseUrl) => {\n  const mappingsNormalized = {}\n\n  Object.keys(mappings).forEach((specifier) => {\n    const address = mappings[specifier]\n\n    if (typeof address !== \"string\") {\n      console.warn(\n        formulateAddressMustBeAString({\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    const specifierResolved = resolveSpecifier(specifier, baseUrl) || specifier\n\n    const addressUrl = tryUrlResolution(address, baseUrl)\n    if (addressUrl === null) {\n      console.warn(\n        formulateAdressResolutionFailed({\n          address,\n          baseUrl,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    if (specifier.endsWith(\"/\") && !addressUrl.endsWith(\"/\")) {\n      console.warn(\n        formulateAddressUrlRequiresTrailingSlash({\n          addressUrl,\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n    mappingsNormalized[specifierResolved] = addressUrl\n  })\n\n  return sortImports(mappingsNormalized)\n}\n\nconst normalizeScopes = (scopes, baseUrl) => {\n  const scopesNormalized = {}\n\n  Object.keys(scopes).forEach((scopeSpecifier) => {\n    const scopeMappings = scopes[scopeSpecifier]\n    const scopeUrl = tryUrlResolution(scopeSpecifier, baseUrl)\n    if (scopeUrl === null) {\n      console.warn(\n        formulateScopeResolutionFailed({\n          scope: scopeSpecifier,\n          baseUrl,\n        }),\n      )\n      return\n    }\n    const scopeValueNormalized = normalizeMappings(scopeMappings, baseUrl)\n    scopesNormalized[scopeUrl] = scopeValueNormalized\n  })\n\n  return sortScopes(scopesNormalized)\n}\n\nconst formulateBaseUrlMustBeStringOrUrl = ({\n  baseUrl,\n}) => `baseUrl must be a string or an url.\n--- base url ---\n${baseUrl}`\n\nconst formulateAddressMustBeAString = ({\n  specifier,\n  address,\n}) => `Address must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateAdressResolutionFailed = ({\n  address,\n  baseUrl,\n  specifier,\n}) => `Address url resolution failed.\n--- address ---\n${address}\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst formulateAddressUrlRequiresTrailingSlash = ({\n  addressURL,\n  address,\n  specifier,\n}) => `Address must end with /.\n--- address url ---\n${addressURL}\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateScopeResolutionFailed = ({\n  scope,\n  baseUrl,\n}) => `Scope url resolution failed.\n--- scope ---\n${scope}\n--- base url ---\n${baseUrl}`\n",
    "export const pathnameToExtension = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex !== -1) {\n    pathname = pathname.slice(slashLastIndex + 1)\n  }\n\n  const dotLastIndex = pathname.lastIndexOf(\".\")\n  if (dotLastIndex === -1) return \"\"\n  // if (dotLastIndex === pathname.length - 1) return \"\"\n  return pathname.slice(dotLastIndex)\n}\n",
    "import { urlToPathname } from \"./internal/urlToPathname.js\"\nimport { pathnameToExtension } from \"./internal/pathnameToExtension.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { applyImportMap } from \"./applyImportMap.js\"\n\nexport const resolveImport = ({\n  specifier,\n  importer,\n  importMap,\n  defaultExtension = false,\n  createBareSpecifierError,\n  onImportMapping = () => {},\n}) => {\n  let url\n  if (importMap) {\n    url = applyImportMap({\n      importMap,\n      specifier,\n      importer,\n      createBareSpecifierError,\n      onImportMapping,\n    })\n  } else {\n    url = resolveUrl(specifier, importer)\n  }\n\n  if (defaultExtension) {\n    url = applyDefaultExtension({ url, importer, defaultExtension })\n  }\n\n  return url\n}\n\nconst applyDefaultExtension = ({ url, importer, defaultExtension }) => {\n  if (urlToPathname(url).endsWith(\"/\")) {\n    return url\n  }\n\n  if (typeof defaultExtension === \"string\") {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\") {\n      return `${url}${defaultExtension}`\n    }\n    return url\n  }\n\n  if (defaultExtension === true) {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\" && importer) {\n      const importerPathname = urlToPathname(importer)\n      const importerExtension = pathnameToExtension(importerPathname)\n      return `${url}${importerExtension}`\n    }\n  }\n\n  return url\n}\n",
    "import { readFileSync } from \"node:fs\"\n\nimport { normalizeImportMap } from \"@jsenv/importmap\"\nimport {\n  resolveUrl,\n  urlIsInsideOf,\n  urlToFileSystemPath,\n  ensureWindowsDriveLetter,\n} from \"@jsenv/filesystem\"\n\nexport const readImportMapFromFile = ({\n  logger,\n  projectDirectoryUrl,\n  importMapFileRelativeUrl,\n}) => {\n  if (typeof importMapFileRelativeUrl === \"undefined\") {\n    return null\n  }\n  if (typeof importMapFileRelativeUrl !== \"string\") {\n    throw new TypeError(\n      `importMapFileRelativeUrl must be a string, got ${importMapFileRelativeUrl}`,\n    )\n  }\n  const importMapFileUrl = applyUrlResolution(\n    importMapFileRelativeUrl,\n    projectDirectoryUrl,\n  )\n  if (!urlIsInsideOf(importMapFileUrl, projectDirectoryUrl)) {\n    logger.warn(`import map file is outside project.\n--- import map file ---\n${urlToFileSystemPath(importMapFileUrl)}\n--- project directory ---\n${urlToFileSystemPath(projectDirectoryUrl)}`)\n  }\n  let importMapFileBuffer\n  const importMapFilePath = urlToFileSystemPath(importMapFileUrl)\n  try {\n    importMapFileBuffer = readFileSync(importMapFilePath)\n  } catch (e) {\n    if (e && e.code === \"ENOENT\") {\n      logger.error(`importmap file not found at ${importMapFilePath}`)\n      return null\n    }\n    throw e\n  }\n  let importMap\n  try {\n    const importMapFileString = String(importMapFileBuffer)\n    importMap = JSON.parse(importMapFileString)\n  } catch (e) {\n    if (e && e.code === \"SyntaxError\") {\n      logger.error(`syntax error in importmap file\n--- error stack ---\n${e.stack}\n--- importmap file ---\n${importMapFilePath}`)\n      return null\n    }\n    throw e\n  }\n  return normalizeImportMap(importMap, importMapFileUrl)\n}\n\nconst applyUrlResolution = (specifier, importer) => {\n  const url = resolveUrl(specifier, importer)\n  return ensureWindowsDriveLetter(url, importer)\n}\n",
    "import { resolveImport } from \"@jsenv/importmap\"\n\nimport { readImportMapFromFile } from \"./readImportMapFromFile.js\"\n\nexport const applyImportMapResolution = (\n  specifier,\n  {\n    logger,\n    projectDirectoryUrl,\n    importMapFileRelativeUrl,\n    importDefaultExtension,\n    importer,\n  },\n) => {\n  const importMap = readImportMapFromFile({\n    logger,\n    projectDirectoryUrl,\n    importMapFileRelativeUrl,\n  })\n  try {\n    return resolveImport({\n      specifier,\n      importer,\n      // by passing importMap to null resolveImport behaves\n      // almost like new URL(specifier, importer)\n      // we want to force the importmap resolution\n      // so that bare specifiers are considered unhandled\n      // even if there is no importmap file\n      importMap: importMap || {},\n      defaultExtension: importDefaultExtension,\n    })\n  } catch (e) {\n    if (e.message.includes(\"bare specifier\")) {\n      // this is an expected error and the file cannot be found\n      logger.debug(\"unmapped bare specifier\")\n      return null\n    }\n    // this is an unexpected error\n    throw e\n  }\n}\n",
    "// https://github.com/benmosher/eslint-plugin-import/blob/master/resolvers/node/index.js\n// https://github.com/benmosher/eslint-plugin-import/tree/master/resolvers\n// https://github.com/olalonde/eslint-import-resolver-babel-root-import\n\nimport { createLogger } from \"@jsenv/logger\"\nimport {\n  assertAndNormalizeDirectoryUrl,\n  ensureWindowsDriveLetter,\n  urlToFileSystemPath,\n  fileSystemPathToUrl,\n  getRealFileSystemUrlSync,\n} from \"@jsenv/filesystem\"\nimport { isSpecifierForNodeCoreModule } from \"@jsenv/importmap/src/isSpecifierForNodeCoreModule.js\"\n\nimport { applyImportMapResolution } from \"./internal/importmap_resolution.js\"\n\nexport const interfaceVersion = 2\n\nexport const resolve = (\n  source,\n  file,\n  {\n    logLevel,\n    projectDirectoryUrl,\n    importMapFileRelativeUrl,\n    caseSensitive = true,\n    importDefaultExtension = false,\n    node = false,\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n  const logger = createLogger({ logLevel })\n  logger.debug(`\nresolve import for project.\n--- specifier ---\n${source}\n--- importer ---\n${file}\n--- project directory path ---\n${urlToFileSystemPath(projectDirectoryUrl)}`)\n  if (node && isSpecifierForNodeCoreModule(source)) {\n    logger.debug(`-> native node module`)\n    return {\n      found: true,\n      path: null,\n    }\n  }\n  const specifier = source\n  const importer = String(fileSystemPathToUrl(file))\n  try {\n    let importUrl = applyImportMapResolution(specifier, {\n      logger,\n      projectDirectoryUrl,\n      importMapFileRelativeUrl,\n      importDefaultExtension,\n      importer,\n    })\n    if (!importUrl) {\n      return {\n        found: false,\n        path: null,\n      }\n    }\n    importUrl = ensureWindowsDriveLetter(importUrl, importer)\n    if (importUrl.startsWith(\"file://\")) {\n      return handleFileUrl(importUrl, {\n        logger,\n        projectDirectoryUrl,\n        caseSensitive,\n      })\n    }\n    if (importUrl.startsWith(\"https://\") || importUrl.startsWith(\"http://\")) {\n      logger.debug(`-> consider found because of http(s) scheme ${importUrl}`)\n      return handleHttpUrl(importUrl)\n    }\n    if (importUrl.startsWith(\"node:\")) {\n      logger.warn(\n        `Warning: ${file} is using \"node\" scheme but \"node\" parameter is not enabled (importing \"${source}\")`,\n      )\n    }\n    logger.debug(`-> consider not found because of scheme ${importUrl}`)\n    return handleRemainingUrl(importUrl)\n  } catch (e) {\n    logger.error(e.stack)\n    return {\n      found: false,\n      path: null,\n    }\n  }\n}\n\nconst handleFileUrl = (fileUrl, { logger, caseSensitive }) => {\n  fileUrl = `file://${new URL(fileUrl).pathname}` // remove query params from url\n  const realFileUrl = getRealFileSystemUrlSync(fileUrl, {\n    // we don't follow link because we care only about the theoric file location\n    // without this realFileUrl and fileUrl can be different\n    // and we would log the warning about case sensitivity\n    followLink: false,\n  })\n  const filePath = urlToFileSystemPath(fileUrl)\n  if (!realFileUrl) {\n    logger.debug(`-> file not found at ${fileUrl}`)\n    return {\n      found: false,\n      path: filePath,\n    }\n  }\n  const realFilePath = urlToFileSystemPath(realFileUrl)\n  if (caseSensitive && realFileUrl !== fileUrl) {\n    logger.warn(\n      `WARNING: file found for ${filePath} but would not be found on a case sensitive filesystem.\nThe real file path is ${realFilePath}.\nYou can choose to disable this warning by disabling case sensitivity.\nIf you do so keep in mind windows users would not find that file.`,\n    )\n    return {\n      found: false,\n      path: realFilePath,\n    }\n  }\n  logger.debug(`-> found file at ${realFilePath}`)\n  return {\n    found: true,\n    path: realFilePath,\n  }\n}\n\nconst handleHttpUrl = () => {\n  // this api is synchronous we cannot check\n  // if a remote http/https file is available\n  return {\n    found: true,\n    path: null,\n  }\n}\n\nconst handleRemainingUrl = () => {\n  return {\n    found: false,\n    path: null,\n  }\n}\n"
  ],
  "names": [
    "LOG_LEVEL_OFF",
    "LOG_LEVEL_DEBUG",
    "LOG_LEVEL_INFO",
    "LOG_LEVEL_WARN",
    "LOG_LEVEL_ERROR",
    "createLogger",
    "logLevel",
    "debug",
    "info",
    "warn",
    "error",
    "debugDisabled",
    "infoDisabled",
    "warnDisabled",
    "errorDisabled",
    "Error",
    "console",
    "createDetailedMessage",
    "message",
    "details",
    "string",
    "Object",
    "keys",
    "forEach",
    "key",
    "value",
    "Array",
    "isArray",
    "join",
    "ensureUrlTrailingSlash",
    "url",
    "endsWith",
    "isFileSystemPath",
    "TypeError",
    "startsWithWindowsDriveLetter",
    "firstChar",
    "test",
    "secondChar",
    "fileSystemPathToUrl",
    "String",
    "pathToFileURL",
    "assertAndNormalizeDirectoryUrl",
    "urlString",
    "URL",
    "href",
    "e",
    "startsWith",
    "urlToFileSystemPath",
    "length",
    "slice",
    "fileSystemPath",
    "fileURLToPath",
    "process",
    "platform",
    "resolveUrl",
    "specifier",
    "baseUrl",
    "isWindows",
    "baseUrlFallback",
    "cwd",
    "ensureWindowsDriveLetter",
    "afterProtocol",
    "extractDriveLetter",
    "baseUrlOrFallback",
    "driveLetter",
    "ressource",
    "urlIsInsideOf",
    "otherUrl",
    "urlObject",
    "otherUrlObject",
    "origin",
    "urlPathname",
    "pathname",
    "otherUrlPathname",
    "isInside",
    "getRealFileSystemUrlSync",
    "fileUrl",
    "followLink",
    "parts",
    "split",
    "reconstructedFileUrl",
    "windowsDriveLetter",
    "shift",
    "i",
    "name",
    "namesOnFileSystem",
    "readdirSync",
    "code",
    "foundOnFilesystem",
    "includes",
    "nameOnFileSystem",
    "find",
    "nameCandidate",
    "toLowerCase",
    "realPath",
    "realpathSync",
    "native",
    "promisify",
    "readFileNode",
    "isSpecifierForNodeCoreModule",
    "NODE_CORE_MODULE_SPECIFIERS",
    "assertImportMap",
    "type",
    "hasScheme",
    "urlToScheme",
    "colonIndex",
    "indexOf",
    "urlToPathname",
    "ressourceToPathname",
    "urlToRessource",
    "scheme",
    "pathnameSlashIndex",
    "searchSeparatorIndex",
    "urlToOrigin",
    "secondProtocolSlashIndex",
    "pathnameToParentPathname",
    "slashLastIndex",
    "lastIndexOf",
    "writeBaseUrlMustBeAString",
    "writeBaseUrlMustBeAbsolute",
    "writeBaseUrlRequired",
    "baseOrigin",
    "basePathname",
    "baseDirectoryPathname",
    "unresolvedPathname",
    "importerFolders",
    "pop",
    "resolvedPathname",
    "tryUrlResolution",
    "result",
    "resolveSpecifier",
    "importer",
    "applyImportMap",
    "importMap",
    "createBareSpecifierError",
    "onImportMapping",
    "specifierUrl",
    "specifierNormalized",
    "scopes",
    "scopeSpecifierMatching",
    "scopeSpecifier",
    "specifierIsPrefixOf",
    "scopeMappings",
    "mappingFromScopes",
    "applyMappings",
    "imports",
    "mappingFromImports",
    "undefined",
    "mappings",
    "scope",
    "specifierCandidates",
    "specifierCandidate",
    "address",
    "from",
    "to",
    "before",
    "after",
    "afterSpecifier",
    "addressFinal",
    "specifierHref",
    "sortImports",
    "mappingsSorted",
    "sort",
    "compareLengthOrLocaleCompare",
    "sortScopes",
    "scopesSorted",
    "a",
    "b",
    "localeCompare",
    "normalizeImportMap",
    "isStringOrUrl",
    "formulateBaseUrlMustBeStringOrUrl",
    "normalizeMappings",
    "normalizeScopes",
    "mappingsNormalized",
    "formulateAddressMustBeAString",
    "specifierResolved",
    "addressUrl",
    "formulateAdressResolutionFailed",
    "formulateAddressUrlRequiresTrailingSlash",
    "scopesNormalized",
    "scopeUrl",
    "formulateScopeResolutionFailed",
    "scopeValueNormalized",
    "addressURL",
    "pathnameToExtension",
    "dotLastIndex",
    "resolveImport",
    "defaultExtension",
    "applyDefaultExtension",
    "extension",
    "importerPathname",
    "importerExtension",
    "readImportMapFromFile",
    "logger",
    "projectDirectoryUrl",
    "importMapFileRelativeUrl",
    "importMapFileUrl",
    "applyUrlResolution",
    "importMapFileBuffer",
    "importMapFilePath",
    "readFileSync",
    "importMapFileString",
    "JSON",
    "parse",
    "stack",
    "applyImportMapResolution",
    "importDefaultExtension",
    "interfaceVersion",
    "resolve",
    "source",
    "file",
    "caseSensitive",
    "node",
    "found",
    "path",
    "importUrl",
    "handleFileUrl",
    "handleHttpUrl",
    "handleRemainingUrl",
    "realFileUrl",
    "filePath",
    "realFilePath"
  ],
  "mappings": ";;;;;;;;;;;AAAO,MAAMA,aAAa,GAAG,KAAtB;AAEA,MAAMC,eAAe,GAAG,OAAxB;AAEA,MAAMC,cAAc,GAAG,MAAvB;AAEA,MAAMC,cAAc,GAAG,MAAvB;AAEA,MAAMC,eAAe,GAAG,OAAxB;;ACAA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAGJ;AAAb,IAAgC,EAAjC,KAAwC;AAClE,MAAII,QAAQ,KAAKL,eAAjB,EAAkC;AAChC,WAAO;AACLM,MAAAA,KADK;AAELC,MAAAA,IAFK;AAGLC,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKJ,cAAjB,EAAiC;AAC/B,WAAO;AACLK,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAFK;AAGLC,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKH,cAAjB,EAAiC;AAC/B,WAAO;AACLI,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAAI,EAAEI,YAFD;AAGLH,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKF,eAAjB,EAAkC;AAChC,WAAO;AACLG,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAAI,EAAEI,YAFD;AAGLH,MAAAA,IAAI,EAAEI,YAHD;AAILH,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKN,aAAjB,EAAgC;AAC9B,WAAO;AACLO,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAAI,EAAEI,YAFD;AAGLH,MAAAA,IAAI,EAAEI,YAHD;AAILH,MAAAA,KAAK,EAAEI;AAJF,KAAP;AAMD;;AAED,QAAM,IAAIC,KAAJ,CAAW;AACnB;AACA,EAAET,QAAS;AACX;AACA,EAAEN,aAAc;AAChB,EAAEI,eAAgB;AAClB,EAAED,cAAe;AACjB,EAAED,cAAe;AACjB,EAAED,eAAgB,EARV,CAAN;AASD,CAvDM;AAyDP,MAAMM,KAAK,GAAGS,OAAO,CAACT,KAAtB;;AAEA,MAAMI,aAAa,GAAG,MAAM,EAA5B;;AAEA,MAAMH,IAAI,GAAGQ,OAAO,CAACR,IAArB;;AAEA,MAAMI,YAAY,GAAG,MAAM,EAA3B;;AAEA,MAAMH,IAAI,GAAGO,OAAO,CAACP,IAArB;;AAEA,MAAMI,YAAY,GAAG,MAAM,EAA3B;;AAEA,MAAMH,KAAK,GAAGM,OAAO,CAACN,KAAtB;;AAEA,MAAMI,aAAa,GAAG,MAAM,EAA5B;;AC/EO,MAAMG,qBAAqB,GAAG,CAACC,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B;AAC9D,MAAIC,MAAM,GAAI,GAAEF,OAAQ,EAAxB;AAEAG,EAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA8BC,GAAD,IAAS;AACpC,UAAMC,KAAK,GAAGN,OAAO,CAACK,GAAD,CAArB;AACAJ,IAAAA,MAAM,IAAK;AACf,MAAMI,GAAI;AACV,EACEE,KAAK,CAACC,OAAN,CAAcF,KAAd,IACIA,KAAK,CAACG,IAAN,CAAY;AAClB,CADM,CADJ,GAGIH,KACL,EAPG;AAQD,GAVD;AAYA,SAAOL,MAAP;AACD,CAhBM;;ACAA,MAAMS,sBAAsB,GAAIC,GAAD,IAAS;AAC7C,SAAOA,GAAG,CAACC,QAAJ,CAAa,GAAb,IAAoBD,GAApB,GAA2B,GAAEA,GAAI,GAAxC;AACD,CAFM;;ACAA,MAAME,gBAAgB,GAAIP,KAAD,IAAW;AACzC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIQ,SAAJ,CACH,oDAAmDR,KAAM,EADtD,CAAN;AAGD;;AAED,MAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,SAAOS,4BAA4B,CAACT,KAAD,CAAnC;AACD,CAZM;;AAcP,MAAMS,4BAA4B,GAAId,MAAD,IAAY;AAC/C,QAAMe,SAAS,GAAGf,MAAM,CAAC,CAAD,CAAxB;AACA,MAAI,CAAC,WAAWgB,IAAX,CAAgBD,SAAhB,CAAL,EAAiC,OAAO,KAAP;AAEjC,QAAME,UAAU,GAAGjB,MAAM,CAAC,CAAD,CAAzB;AACA,MAAIiB,UAAU,KAAK,GAAnB,EAAwB,OAAO,KAAP;AAExB,SAAO,IAAP;AACD,CARD;;ACXO,MAAMC,mBAAmB,GAAIb,KAAD,IAAW;AAC5C,MAAI,CAACO,gBAAgB,CAACP,KAAD,CAArB,EAA8B;AAC5B,UAAM,IAAIV,KAAJ,CAAW,iDAAgDU,KAAM,EAAjE,CAAN;AACD;;AACD,SAAOc,MAAM,CAACC,iBAAa,CAACf,KAAD,CAAd,CAAb;AACD,CALM;;ACCA,MAAMgB,8BAA8B,GAAIhB,KAAD,IAAW;AACvD,MAAIiB,SAAJ;;AAEA,MAAIjB,KAAK,YAAYkB,GAArB,EAA0B;AACxBD,IAAAA,SAAS,GAAGjB,KAAK,CAACmB,IAAlB;AACD,GAFD,MAEO,IAAI,OAAOnB,KAAP,KAAiB,QAArB,EAA+B;AACpC,QAAIO,gBAAgB,CAACP,KAAD,CAApB,EAA6B;AAC3BiB,MAAAA,SAAS,GAAGJ,mBAAmB,CAACb,KAAD,CAA/B;AACD,KAFD,MAEO;AACL,UAAI;AACFiB,QAAAA,SAAS,GAAGH,MAAM,CAAC,IAAII,GAAJ,CAAQlB,KAAR,CAAD,CAAlB;AACD,OAFD,CAEE,OAAOoB,CAAP,EAAU;AACV,cAAM,IAAIZ,SAAJ,CACH,8CAA6CR,KAAM,EADhD,CAAN;AAGD;AACF;AACF,GAZM,MAYA;AACL,UAAM,IAAIQ,SAAJ,CACH,qDAAoDR,KAAM,EADvD,CAAN;AAGD;;AAED,MAAI,CAACiB,SAAS,CAACI,UAAV,CAAqB,SAArB,CAAL,EAAsC;AACpC,UAAM,IAAI/B,KAAJ,CAAW,mDAAkDU,KAAM,EAAnE,CAAN;AACD;;AAED,SAAOI,sBAAsB,CAACa,SAAD,CAA7B;AACD,CA5BM;;ACFA,MAAMK,mBAAmB,GAAIjB,KAAD,IAAS;AAC1C,MAAIY,SAAS,GAAGH,MAAM,CAACT,KAAD,CAAtB;;AACA,MAAIY,SAAS,CAACA,SAAS,CAACM,MAAV,GAAmB,CAApB,CAAT,KAAoC,GAAxC,EAA6C;AAC3C;AACA;AACAN,IAAAA,SAAS,GAAGA,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACD;;AACD,QAAMC,cAAc,GAAGC,iBAAa,CAACT,SAAD,CAApC;AACA,SAAOQ,cAAP;AACD,CATM;;ACFP;AACA;AACA;AACA;AAQkBE,OAAO,CAACC,QAAR,KAAqB;;ACXhC,MAAMC,YAAU,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AAChD,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClC,UAAM,IAAIvB,SAAJ,CAAe,8BAA6BsB,SAAU,EAAtD,CAAN;AACD;;AAED,SAAOhB,MAAM,CAAC,IAAII,GAAJ,CAAQY,SAAR,EAAmBC,OAAnB,CAAD,CAAb;AACD,CANM;;ACEP,MAAMC,SAAS,GAAGL,OAAO,CAACC,QAAR,KAAqB,OAAvC;AACA,MAAMK,eAAe,GAAGpB,mBAAmB,CAACc,OAAO,CAACO,GAAR,EAAD,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,wBAAwB,GAAG,CAAC9B,GAAD,EAAM0B,OAAN,KAAkB;AACxD,MAAI;AACF1B,IAAAA,GAAG,GAAGS,MAAM,CAAC,IAAII,GAAJ,CAAQb,GAAR,CAAD,CAAZ;AACD,GAFD,CAEE,OAAOe,CAAP,EAAU;AACV,UAAM,IAAI9B,KAAJ,CAAW,iCAAgCe,GAAI,EAA/C,CAAN;AACD;;AAED,MAAI,CAAC2B,SAAL,EAAgB;AACd,WAAO3B,GAAP;AACD;;AAED,MAAI;AACF0B,IAAAA,OAAO,GAAGjB,MAAM,CAAC,IAAII,GAAJ,CAAQa,OAAR,CAAD,CAAhB;AACD,GAFD,CAEE,OAAOX,CAAP,EAAU;AACV,UAAM,IAAI9B,KAAJ,CACH,qCAAoCyC,OAAQ,sCAAqC1B,GAAI,EADlF,CAAN;AAGD;;AAED,MAAI,CAACA,GAAG,CAACgB,UAAJ,CAAe,SAAf,CAAL,EAAgC;AAC9B,WAAOhB,GAAP;AACD;;AACD,QAAM+B,aAAa,GAAG/B,GAAG,CAACmB,KAAJ,CAAU,UAAUD,MAApB,CAAtB,CAtBwD;;AAwBxD,MAAIc,kBAAkB,CAACD,aAAD,CAAtB,EAAuC;AACrC,WAAO/B,GAAP;AACD,GA1BuD;;;AA6BxD,QAAMiC,iBAAiB,GAAGP,OAAO,CAACV,UAAR,CAAmB,SAAnB,IACtBU,OADsB,GAEtBE,eAFJ;AAGA,QAAMM,WAAW,GAAGF,kBAAkB,CACpCC,iBAAiB,CAACd,KAAlB,CAAwB,UAAUD,MAAlC,CADoC,CAAtC;;AAGA,MAAI,CAACgB,WAAL,EAAkB;AAChB,UAAM,IAAIjD,KAAJ,CACH,4CAA2CyC,OAAQ,sCAAqC1B,GAAI,EADzF,CAAN;AAGD;;AACD,SAAQ,WAAUkC,WAAY,IAAGH,aAAc,EAA/C;AACD,CAzCM;;AA2CP,MAAMC,kBAAkB,GAAIG,SAAD,IAAe;AACxC;AACA,MAAI,WAAW7B,IAAX,CAAgB6B,SAAS,CAAC,CAAD,CAAzB,KAAiCA,SAAS,CAAC,CAAD,CAAT,KAAiB,GAAtD,EAA2D;AACzD,WAAOA,SAAS,CAAC,CAAD,CAAhB;AACD;;AACD,SAAO,IAAP;AACD,CAND;;AC/CkBb,OAAO,CAACC,QAAR,KAAqB;;ACdhC,MAAMa,aAAa,GAAG,CAACpC,GAAD,EAAMqC,QAAN,KAAmB;AAC9C,QAAMC,SAAS,GAAG,IAAIzB,GAAJ,CAAQb,GAAR,CAAlB;AACA,QAAMuC,cAAc,GAAG,IAAI1B,GAAJ,CAAQwB,QAAR,CAAvB;;AAEA,MAAIC,SAAS,CAACE,MAAV,KAAqBD,cAAc,CAACC,MAAxC,EAAgD;AAC9C,WAAO,KAAP;AACD;;AAED,QAAMC,WAAW,GAAGH,SAAS,CAACI,QAA9B;AACA,QAAMC,gBAAgB,GAAGJ,cAAc,CAACG,QAAxC;;AACA,MAAID,WAAW,KAAKE,gBAApB,EAAsC;AACpC,WAAO,KAAP;AACD;;AAED,QAAMC,QAAQ,GAAGH,WAAW,CAACzB,UAAZ,CAAuB2B,gBAAvB,CAAjB;AACA,SAAOC,QAAP;AACD,CAhBM;;ACKA,MAAMC,wBAAwB,GAAG,CACtCC,OADsC,EAEtC;AAAEC,EAAAA,UAAU,GAAG;AAAf,IAAwB,EAFc,KAGnC;AACH,QAAML,QAAQ,GAAG,IAAI7B,GAAJ,CAAQiC,OAAR,EAAiBJ,QAAlC;AACA,QAAMM,KAAK,GAAGN,QAAQ,CAACvB,KAAT,CAAe,CAAf,EAAkB8B,KAAlB,CAAwB,GAAxB,CAAd;AACA,MAAIC,oBAAoB,GAAI,UAA5B;;AACA,MAAI5B,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AAChC,UAAM4B,kBAAkB,GAAGH,KAAK,CAACI,KAAN,EAA3B;AACAF,IAAAA,oBAAoB,IAAK,GAAEC,kBAAmB,GAA9C;AACD;;AACD,MAAIE,CAAC,GAAG,CAAR,CARG;;AAUH,SAAO,IAAP,EAAa;AACX,UAAMC,IAAI,GAAGN,KAAK,CAACK,CAAD,CAAlB;AACAA,IAAAA,CAAC;AACD,QAAIE,iBAAJ;;AACA,QAAI;AACFA,MAAAA,iBAAiB,GAAGC,mBAAW;AAE7B;AACA;AACA,UAAI3C,GAAJ,CAAQqC,oBAAR,CAJ6B,CAA/B;AAMD,KAPD,CAOE,OAAOnC,CAAP,EAAU;AACV,UAAIA,CAAC,IAAIA,CAAC,CAAC0C,IAAF,KAAW,QAApB,EAA8B;AAC5B,eAAO,IAAP;AACD;;AACD,YAAM1C,CAAN;AACD;;AACD,UAAM2C,iBAAiB,GAAGH,iBAAiB,CAACI,QAAlB,CAA2BL,IAA3B,CAA1B;;AACA,QAAII,iBAAJ,EAAuB;AACrBR,MAAAA,oBAAoB,IAAII,IAAxB;AACD,KAFD,MAEO;AACL,YAAMM,gBAAgB,GAAGL,iBAAiB,CAACM,IAAlB,CACtBC,aAAD,IAAmBA,aAAa,CAACC,WAAd,OAAgCT,IAAI,CAACS,WAAL,EAD5B,CAAzB;;AAGA,UAAI,CAACH,gBAAL,EAAuB;AACrB,eAAO,IAAP;AACD;;AACDV,MAAAA,oBAAoB,IAAIU,gBAAxB;AACD;;AACD,QAAIP,CAAC,KAAKL,KAAK,CAAC9B,MAAhB,EAAwB;AACtB,UAAI6B,UAAJ,EAAgB;AACd,cAAMiB,QAAQ,GAAGC,oBAAY,CAACC,MAAb,CACfjD,mBAAmB,CAACiC,oBAAD,CADJ,CAAjB;AAGA,eAAO1C,mBAAmB,CAACwD,QAAD,CAA1B;AACD;;AACD,aAAOd,oBAAP;AACD;;AACDA,IAAAA,oBAAoB,IAAI,GAAxB;AACD;AACF,CArDM;;ACAqBiB,cAAS,CAACC,WAAD;;ACHnB9C,OAAO,CAACC,QAAR,KAAqB;;ACFvC;AAiBgBD,OAAO,CAACC,QAAR,KAAqB;;ACjBrC;AACA;AACA;AACA;AAEO,MAAM8C,4BAA4B,GAAI5C,SAAD,IAAe;AACzD,SACEA,SAAS,CAACT,UAAV,CAAqB,OAArB,KACAsD,2BAA2B,CAACX,QAA5B,CAAqClC,SAArC,CAFF;AAID,CALM;AAOP,MAAM6C,2BAA2B,GAAG,CAClC,QADkC,EAElC,eAFkC,EAGlC,aAHkC,EAIlC,gBAJkC,EAKlC,QALkC,EAMlC,eANkC,EAOlC,SAPkC,EAQlC,SARkC,EASlC,WATkC,EAUlC,QAVkC,EAWlC,WAXkC,EAYlC,OAZkC,EAalC,KAbkC,EAclC,QAdkC,EAelC,QAfkC,EAgBlC,UAhBkC,EAiBlC,IAjBkC,EAkBlC,aAlBkC,EAmBlC,aAnBkC,EAoBlC,cApBkC,EAqBlC,cArBkC,EAsBlC,gBAtBkC,EAuBlC,gBAvBkC,EAwBlC,cAxBkC,EAyBlC,MAzBkC,EA0BlC,OA1BkC,EA2BlC,OA3BkC,EA4BlC,WA5BkC,EA6BlC,WA7BkC,EA8BlC,QA9BkC,EA+BlC,KA/BkC,EAgClC,2BAhCkC,EAiClC,0CAjCkC,EAkClC,wCAlCkC,EAmClC,IAnCkC,EAoClC,MApCkC,EAqClC,YArCkC,EAsClC,SAtCkC,EAuClC,UAvCkC,EAwClC,aAxCkC,EAyClC,UAzCkC,EA0ClC,MA1CkC,EA2ClC,SA3CkC,EA4ClC,gBA5CkC,EA6ClC,mBA7CkC,EA8ClC,cA9CkC,EA+ClC,qBA/CkC,EAgDlC,kBAhDkC,EAiDlC,kBAjDkC,EAkDlC,QAlDkC,EAmDlC,iBAnDkC,EAoDlC,gBApDkC,EAqDlC,KArDkC,EAsDlC,QAtDkC,EAuDlC,aAvDkC,EAwDlC,aAxDkC,EAyDlC,WAzDkC,EA0DlC,KA1DkC,EA2DlC,cA3DkC,EA4DlC,KA5DkC,EA6DlC,KA7DkC,EA8DlC,MA9DkC,EA+DlC,oBA/DkC,EAgElC,kBAhEkC,EAiElC,oBAjEkC,EAkElC,oBAlEkC,EAmElC,oBAnEkC,EAoElC,uBApEkC,EAqElC,oBArEkC,EAsElC,IAtEkC,EAuElC,IAvEkC,EAwElC,gBAxEkC,EAyElC,MAzEkC;AA2ElC,QA3EkC,CAApC;;ACZO,MAAMC,eAAe,GAAI5E,KAAD,IAAW;AACxC,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAM,IAAIQ,SAAJ,CAAe,0CAAf,CAAN;AACD;;AAED,QAAMqE,IAAI,GAAG,OAAO7E,KAApB;;AACA,MAAI6E,IAAI,KAAK,QAAb,EAAuB;AACrB,UAAM,IAAIrE,SAAJ,CAAe,4CAA2CR,KAAM,EAAhE,CAAN;AACD;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,UAAM,IAAIQ,SAAJ,CACH,kDAAiDR,KAAM,EADpD,CAAN;AAGD;AACF,CAfM;;ACAA,MAAM8E,SAAS,GAAInF,MAAD,IAAY;AACnC,SAAO,iBAAiBgB,IAAjB,CAAsBhB,MAAtB,CAAP;AACD,CAFM;;ACAA,MAAMoF,WAAW,GAAI9D,SAAD,IAAe;AACxC,QAAM+D,UAAU,GAAG/D,SAAS,CAACgE,OAAV,CAAkB,GAAlB,CAAnB;AACA,MAAID,UAAU,KAAK,CAAC,CAApB,EAAuB,OAAO,EAAP;AACvB,SAAO/D,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmBwD,UAAnB,CAAP;AACD,CAJM;;ACEA,MAAME,aAAa,GAAIjE,SAAD,IAAe;AAC1C,SAAOkE,mBAAmB,CAACC,cAAc,CAACnE,SAAD,CAAf,CAA1B;AACD,CAFM;;AAIP,MAAMmE,cAAc,GAAInE,SAAD,IAAe;AACpC,QAAMoE,MAAM,GAAGN,WAAW,CAAC9D,SAAD,CAA1B;;AAEA,MAAIoE,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAOpE,SAAS,CAACO,KAAV,CAAgB,UAAUD,MAA1B,CAAP;AACD;;AAED,MAAI8D,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,MAArC,EAA6C;AAC3C;AACA,UAAMjD,aAAa,GAAGnB,SAAS,CAACO,KAAV,CAAgB6D,MAAM,CAAC9D,MAAP,GAAgB,MAAMA,MAAtC,CAAtB;AACA,UAAM+D,kBAAkB,GAAGlD,aAAa,CAAC6C,OAAd,CAAsB,GAAtB,EAA2B,MAAM1D,MAAjC,CAA3B;AACA,WAAOa,aAAa,CAACZ,KAAd,CAAoB8D,kBAApB,CAAP;AACD;;AAED,SAAOrE,SAAS,CAACO,KAAV,CAAgB6D,MAAM,CAAC9D,MAAP,GAAgB,CAAhC,CAAP;AACD,CAfD;;AAiBA,MAAM4D,mBAAmB,GAAI3C,SAAD,IAAe;AACzC,QAAM+C,oBAAoB,GAAG/C,SAAS,CAACyC,OAAV,CAAkB,GAAlB,CAA7B;AACA,SAAOM,oBAAoB,KAAK,CAAC,CAA1B,GACH/C,SADG,GAEHA,SAAS,CAAChB,KAAV,CAAgB,CAAhB,EAAmB+D,oBAAnB,CAFJ;AAGD,CALD;;ACrBO,MAAMC,WAAW,GAAIvE,SAAD,IAAe;AACxC,QAAMoE,MAAM,GAAGN,WAAW,CAAC9D,SAAD,CAA1B;;AAEA,MAAIoE,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAO,SAAP;AACD;;AAED,MAAIA,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,OAApC,EAA6C;AAC3C,UAAMI,wBAAwB,GAAGJ,MAAM,CAAC9D,MAAP,GAAgB,MAAMA,MAAvD;AACA,UAAM+D,kBAAkB,GAAGrE,SAAS,CAACgE,OAAV,CAAkB,GAAlB,EAAuBQ,wBAAvB,CAA3B;AAEA,QAAIH,kBAAkB,KAAK,CAAC,CAA5B,EAA+B,OAAOrE,SAAP;AAC/B,WAAOA,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmB8D,kBAAnB,CAAP;AACD;;AAED,SAAOrE,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmB6D,MAAM,CAAC9D,MAAP,GAAgB,CAAnC,CAAP;AACD,CAhBM;;ACFA,MAAMmE,wBAAwB,GAAI3C,QAAD,IAAc;AACpD,QAAM4C,cAAc,GAAG5C,QAAQ,CAAC6C,WAAT,CAAqB,GAArB,CAAvB;;AACA,MAAID,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzB,WAAO,GAAP;AACD;;AAED,SAAO5C,QAAQ,CAACvB,KAAT,CAAe,CAAf,EAAkBmE,cAAc,GAAG,CAAnC,CAAP;AACD,CAPM;;ACAP;AAQO,MAAM9D,UAAU,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AAChD,MAAIA,OAAJ,EAAa;AACX,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,YAAM,IAAIvB,SAAJ,CAAcqF,yBAAyB,CAAC;AAAE9D,QAAAA,OAAF;AAAWD,QAAAA;AAAX,OAAD,CAAvC,CAAN;AACD;;AACD,QAAI,CAACgD,SAAS,CAAC/C,OAAD,CAAd,EAAyB;AACvB,YAAM,IAAIzC,KAAJ,CAAUwG,0BAA0B,CAAC;AAAE/D,QAAAA,OAAF;AAAWD,QAAAA;AAAX,OAAD,CAApC,CAAN;AACD;AACF;;AAED,MAAIgD,SAAS,CAAChD,SAAD,CAAb,EAA0B;AACxB,WAAOA,SAAP;AACD;;AAED,MAAI,CAACC,OAAL,EAAc;AACZ,UAAM,IAAIzC,KAAJ,CAAUyG,oBAAoB,CAAC;AAAEhE,MAAAA,OAAF;AAAWD,MAAAA;AAAX,KAAD,CAA9B,CAAN;AACD,GAhB+C;;;AAmBhD,MAAIA,SAAS,CAACN,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AAClC,WAAQ,GAAEuD,WAAW,CAAChD,OAAD,CAAU,IAAGD,SAAU,EAA5C;AACD,GArB+C;;;AAwBhD,MAAIA,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AACxB,WAAQ,GAAE0D,WAAW,CAACzD,OAAD,CAAU,GAAED,SAAU,EAA3C;AACD;;AAED,QAAMkE,UAAU,GAAGR,WAAW,CAACzD,OAAD,CAA9B;AACA,QAAMkE,YAAY,GAAGf,aAAa,CAACnD,OAAD,CAAlC;;AAEA,MAAID,SAAS,KAAK,GAAlB,EAAuB;AACrB,UAAMoE,qBAAqB,GAAGR,wBAAwB,CAACO,YAAD,CAAtD;AACA,WAAQ,GAAED,UAAW,GAAEE,qBAAsB,EAA7C;AACD,GAlC+C;;;AAqChD,MAAIpE,SAAS,CAACN,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AAClC,UAAM0E,qBAAqB,GAAGR,wBAAwB,CAACO,YAAD,CAAtD;AACA,WAAQ,GAAED,UAAW,GAAEE,qBAAsB,GAAEpE,SAAS,CAACN,KAAV,CAAgB,CAAhB,CAAmB,EAAlE;AACD,GAxC+C;;;AA2ChD,MAAIM,SAAS,CAACN,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,KAA9B,EAAqC;AACnC,QAAI2E,kBAAkB,GAAGrE,SAAzB;AACA,UAAMsE,eAAe,GAAGH,YAAY,CAAC3C,KAAb,CAAmB,GAAnB,CAAxB;AACA8C,IAAAA,eAAe,CAACC,GAAhB;;AAEA,WAAOF,kBAAkB,CAAC3E,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,MAAmC,KAA1C,EAAiD;AAC/C2E,MAAAA,kBAAkB,GAAGA,kBAAkB,CAAC3E,KAAnB,CAAyB,CAAzB,CAArB,CAD+C;AAG/C;;AACA,UAAI4E,eAAe,CAAC7E,MAApB,EAA4B;AAC1B6E,QAAAA,eAAe,CAACC,GAAhB;AACD;AACF;;AAED,UAAMC,gBAAgB,GAAI,GAAEF,eAAe,CAACjG,IAAhB,CAC1B,GAD0B,CAE1B,IAAGgG,kBAAmB,EAFxB;AAGA,WAAQ,GAAEH,UAAW,GAAEM,gBAAiB,EAAxC;AACD,GA7D+C;;;AAgEhD,MAAIL,YAAY,KAAK,EAArB,EAAyB;AACvB,WAAQ,GAAED,UAAW,IAAGlE,SAAU,EAAlC;AACD;;AACD,MAAImE,YAAY,CAACA,YAAY,CAAC1E,MAAd,CAAZ,KAAsC,GAA1C,EAA+C;AAC7C,WAAQ,GAAEyE,UAAW,GAAEC,YAAa,GAAEnE,SAAU,EAAhD;AACD;;AACD,SAAQ,GAAEkE,UAAW,GAAEN,wBAAwB,CAACO,YAAD,CAAe,GAAEnE,SAAU,EAA1E;AACD,CAvEM;;AAyEP,MAAM+D,yBAAyB,GAAG,CAAC;AACjC9D,EAAAA,OADiC;AAEjCD,EAAAA;AAFiC,CAAD,KAG3B;AACP;AACA,EAAEC,OAAQ;AACV;AACA,EAAED,SAAU,EAPZ;;AASA,MAAMgE,0BAA0B,GAAG,CAAC;AAClC/D,EAAAA,OADkC;AAElCD,EAAAA;AAFkC,CAAD,KAG5B;AACP;AACA,EAAEC,OAAQ;AACV;AACA,EAAED,SAAU,EAPZ;;AASA,MAAMiE,oBAAoB,GAAG,CAAC;AAC5BhE,EAAAA,OAD4B;AAE5BD,EAAAA;AAF4B,CAAD,KAGtB;AACP;AACA,EAAEC,OAAQ;AACV;AACA,EAAED,SAAU,EAPZ;;AChGO,MAAMyE,gBAAgB,GAAG,CAAC5G,MAAD,EAASU,GAAT,KAAiB;AAC/C,QAAMmG,MAAM,GAAG3E,UAAU,CAAClC,MAAD,EAASU,GAAT,CAAzB;AACA,SAAOyE,SAAS,CAAC0B,MAAD,CAAT,GAAoBA,MAApB,GAA6B,IAApC;AACD,CAHM;;ACAA,MAAMC,gBAAgB,GAAG,CAAC3E,SAAD,EAAY4E,QAAZ,KAAyB;AACvD,MACE5E,SAAS,KAAK,GAAd,IACAA,SAAS,CAAC,CAAD,CAAT,KAAiB,GADjB,IAEAA,SAAS,CAACT,UAAV,CAAqB,IAArB,CAFA,IAGAS,SAAS,CAACT,UAAV,CAAqB,KAArB,CAJF,EAKE;AACA,WAAOQ,UAAU,CAACC,SAAD,EAAY4E,QAAZ,CAAjB;AACD;;AAED,MAAI5B,SAAS,CAAChD,SAAD,CAAb,EAA0B;AACxB,WAAOA,SAAP;AACD;;AAED,SAAO,IAAP;AACD,CAfM;;ACGA,MAAM6E,cAAc,GAAG,CAAC;AAC7BC,EAAAA,SAD6B;AAE7B9E,EAAAA,SAF6B;AAG7B4E,EAAAA,QAH6B;AAI7BG,EAAAA,wBAAwB,GAAG,CAAC;AAAE/E,IAAAA,SAAF;AAAa4E,IAAAA;AAAb,GAAD,KAA6B;AACtD,WAAO,IAAIpH,KAAJ,CACLE,qBAAqB,CAAE,0BAAF,EAA6B;AAChDsC,MAAAA,SADgD;AAEhD4E,MAAAA;AAFgD,KAA7B,CADhB,CAAP;AAMD,GAX4B;AAY7BI,EAAAA,eAAe,GAAG,MAAM;AAZK,CAAD,KAaxB;AACJlC,EAAAA,eAAe,CAACgC,SAAD,CAAf;;AACA,MAAI,OAAO9E,SAAP,KAAqB,QAAzB,EAAmC;AACjC,UAAM,IAAItB,SAAJ,CACJhB,qBAAqB,CAAC,6BAAD,EAAgC;AACnDsC,MAAAA,SADmD;AAEnD4E,MAAAA;AAFmD,KAAhC,CADjB,CAAN;AAMD;;AACD,MAAIA,QAAJ,EAAc;AACZ,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,YAAM,IAAIlG,SAAJ,CACJhB,qBAAqB,CAAC,4BAAD,EAA+B;AAClDkH,QAAAA,QADkD;AAElD5E,QAAAA;AAFkD,OAA/B,CADjB,CAAN;AAMD;;AACD,QAAI,CAACgD,SAAS,CAAC4B,QAAD,CAAd,EAA0B;AACxB,YAAM,IAAIpH,KAAJ,CACJE,qBAAqB,CAAE,mCAAF,EAAsC;AACzDkH,QAAAA,QADyD;AAEzD5E,QAAAA;AAFyD,OAAtC,CADjB,CAAN;AAMD;AACF;;AAED,QAAMiF,YAAY,GAAGN,gBAAgB,CAAC3E,SAAD,EAAY4E,QAAZ,CAArC;AACA,QAAMM,mBAAmB,GAAGD,YAAY,IAAIjF,SAA5C;AAEA,QAAM;AAAEmF,IAAAA;AAAF,MAAaL,SAAnB;;AACA,MAAIK,MAAM,IAAIP,QAAd,EAAwB;AACtB,UAAMQ,sBAAsB,GAAGtH,MAAM,CAACC,IAAP,CAAYoH,MAAZ,EAAoB/C,IAApB,CAC5BiD,cAAD,IAAoB;AAClB,aACEA,cAAc,KAAKT,QAAnB,IACAU,mBAAmB,CAACD,cAAD,EAAiBT,QAAjB,CAFrB;AAID,KAN4B,CAA/B;;AAQA,QAAIQ,sBAAJ,EAA4B;AAC1B,YAAMG,aAAa,GAAGJ,MAAM,CAACC,sBAAD,CAA5B;AACA,YAAMI,iBAAiB,GAAGC,aAAa,CACrCF,aADqC,EAErCL,mBAFqC,EAGrCE,sBAHqC,EAIrCJ,eAJqC,CAAvC;;AAMA,UAAIQ,iBAAiB,KAAK,IAA1B,EAAgC;AAC9B,eAAOA,iBAAP;AACD;AACF;AACF;;AAED,QAAM;AAAEE,IAAAA;AAAF,MAAcZ,SAApB;;AACA,MAAIY,OAAJ,EAAa;AACX,UAAMC,kBAAkB,GAAGF,aAAa,CACtCC,OADsC,EAEtCR,mBAFsC,EAGtCU,SAHsC,EAItCZ,eAJsC,CAAxC;;AAMA,QAAIW,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B,aAAOA,kBAAP;AACD;AACF;;AAED,MAAIV,YAAJ,EAAkB;AAChB,WAAOA,YAAP;AACD;;AAED,QAAMF,wBAAwB,CAAC;AAAE/E,IAAAA,SAAF;AAAa4E,IAAAA;AAAb,GAAD,CAA9B;AACD,CAvFM;;AAyFP,MAAMa,aAAa,GAAG,CACpBI,QADoB,EAEpBX,mBAFoB,EAGpBY,KAHoB,EAIpBd,eAJoB,KAKjB;AACH,QAAMe,mBAAmB,GAAGjI,MAAM,CAACC,IAAP,CAAY8H,QAAZ,CAA5B;AAEA,MAAIjE,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGmE,mBAAmB,CAACtG,MAA/B,EAAuC;AACrC,UAAMuG,kBAAkB,GAAGD,mBAAmB,CAACnE,CAAD,CAA9C;AACAA,IAAAA,CAAC;;AACD,QAAIoE,kBAAkB,KAAKd,mBAA3B,EAAgD;AAC9C,YAAMe,OAAO,GAAGJ,QAAQ,CAACG,kBAAD,CAAxB;AACAhB,MAAAA,eAAe,CAAC;AACdc,QAAAA,KADc;AAEdI,QAAAA,IAAI,EAAEF,kBAFQ;AAGdG,QAAAA,EAAE,EAAEF,OAHU;AAIdG,QAAAA,MAAM,EAAElB,mBAJM;AAKdmB,QAAAA,KAAK,EAAEJ;AALO,OAAD,CAAf;AAOA,aAAOA,OAAP;AACD;;AACD,QAAIX,mBAAmB,CAACU,kBAAD,EAAqBd,mBAArB,CAAvB,EAAkE;AAChE,YAAMe,OAAO,GAAGJ,QAAQ,CAACG,kBAAD,CAAxB;AACA,YAAMM,cAAc,GAAGpB,mBAAmB,CAACxF,KAApB,CACrBsG,kBAAkB,CAACvG,MADE,CAAvB;AAGA,YAAM8G,YAAY,GAAG9B,gBAAgB,CAAC6B,cAAD,EAAiBL,OAAjB,CAArC;AACAjB,MAAAA,eAAe,CAAC;AACdc,QAAAA,KADc;AAEdI,QAAAA,IAAI,EAAEF,kBAFQ;AAGdG,QAAAA,EAAE,EAAEF,OAHU;AAIdG,QAAAA,MAAM,EAAElB,mBAJM;AAKdmB,QAAAA,KAAK,EAAEE;AALO,OAAD,CAAf;AAOA,aAAOA,YAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAzCD;;AA2CA,MAAMjB,mBAAmB,GAAG,CAACkB,aAAD,EAAgBnH,IAAhB,KAAyB;AACnD,SACEmH,aAAa,CAACA,aAAa,CAAC/G,MAAd,GAAuB,CAAxB,CAAb,KAA4C,GAA5C,IACAJ,IAAI,CAACE,UAAL,CAAgBiH,aAAhB,CAFF;AAID,CALD;;AC7HO,MAAMC,WAAW,GAAIf,OAAD,IAAa;AACtC,QAAMgB,cAAc,GAAG,EAAvB;AAEA5I,EAAAA,MAAM,CAACC,IAAP,CAAY2H,OAAZ,EACGiB,IADH,CACQC,4BADR,EAEG5I,OAFH,CAEY6D,IAAD,IAAU;AACjB6E,IAAAA,cAAc,CAAC7E,IAAD,CAAd,GAAuB6D,OAAO,CAAC7D,IAAD,CAA9B;AACD,GAJH;AAMA,SAAO6E,cAAP;AACD,CAVM;AAYA,MAAMG,UAAU,GAAI1B,MAAD,IAAY;AACpC,QAAM2B,YAAY,GAAG,EAArB;AAEAhJ,EAAAA,MAAM,CAACC,IAAP,CAAYoH,MAAZ,EACGwB,IADH,CACQC,4BADR,EAEG5I,OAFH,CAEYqH,cAAD,IAAoB;AAC3ByB,IAAAA,YAAY,CAACzB,cAAD,CAAZ,GAA+BoB,WAAW,CAACtB,MAAM,CAACE,cAAD,CAAP,CAA1C;AACD,GAJH;AAMA,SAAOyB,YAAP;AACD,CAVM;;AAYP,MAAMF,4BAA4B,GAAG,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAC7C,SAAOA,CAAC,CAACvH,MAAF,GAAWsH,CAAC,CAACtH,MAAb,IAAuBsH,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAA9B;AACD,CAFD;;AChCO,MAAME,kBAAkB,GAAG,CAACpC,SAAD,EAAY7E,OAAZ,KAAwB;AACxD6C,EAAAA,eAAe,CAACgC,SAAD,CAAf;;AAEA,MAAI,CAACqC,aAAa,CAAClH,OAAD,CAAlB,EAA6B;AAC3B,UAAM,IAAIvB,SAAJ,CAAc0I,iCAAiC,CAAC;AAAEnH,MAAAA;AAAF,KAAD,CAA/C,CAAN;AACD;;AAED,QAAM;AAAEyF,IAAAA,OAAF;AAAWP,IAAAA;AAAX,MAAsBL,SAA5B;AAEA,SAAO;AACLY,IAAAA,OAAO,EAAEA,OAAO,GAAG2B,iBAAiB,CAAC3B,OAAD,EAAUzF,OAAV,CAApB,GAAyC2F,SADpD;AAELT,IAAAA,MAAM,EAAEA,MAAM,GAAGmC,eAAe,CAACnC,MAAD,EAASlF,OAAT,CAAlB,GAAsC2F;AAF/C,GAAP;AAID,CAbM;;AAeP,MAAMuB,aAAa,GAAIjJ,KAAD,IAAW;AAC/B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,MAAI,OAAOkB,GAAP,KAAe,UAAf,IAA6BlB,KAAK,YAAYkB,GAAlD,EAAuD;AACrD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAVD;;AAYA,MAAMiI,iBAAiB,GAAG,CAACxB,QAAD,EAAW5F,OAAX,KAAuB;AAC/C,QAAMsH,kBAAkB,GAAG,EAA3B;AAEAzJ,EAAAA,MAAM,CAACC,IAAP,CAAY8H,QAAZ,EAAsB7H,OAAtB,CAA+BgC,SAAD,IAAe;AAC3C,UAAMiG,OAAO,GAAGJ,QAAQ,CAAC7F,SAAD,CAAxB;;AAEA,QAAI,OAAOiG,OAAP,KAAmB,QAAvB,EAAiC;AAC/BxI,MAAAA,OAAO,CAACP,IAAR,CACEsK,6BAA6B,CAAC;AAC5BvB,QAAAA,OAD4B;AAE5BjG,QAAAA;AAF4B,OAAD,CAD/B;AAMA;AACD;;AAED,UAAMyH,iBAAiB,GAAG9C,gBAAgB,CAAC3E,SAAD,EAAYC,OAAZ,CAAhB,IAAwCD,SAAlE;AAEA,UAAM0H,UAAU,GAAGjD,gBAAgB,CAACwB,OAAD,EAAUhG,OAAV,CAAnC;;AACA,QAAIyH,UAAU,KAAK,IAAnB,EAAyB;AACvBjK,MAAAA,OAAO,CAACP,IAAR,CACEyK,+BAA+B,CAAC;AAC9B1B,QAAAA,OAD8B;AAE9BhG,QAAAA,OAF8B;AAG9BD,QAAAA;AAH8B,OAAD,CADjC;AAOA;AACD;;AAED,QAAIA,SAAS,CAACxB,QAAV,CAAmB,GAAnB,KAA2B,CAACkJ,UAAU,CAAClJ,QAAX,CAAoB,GAApB,CAAhC,EAA0D;AACxDf,MAAAA,OAAO,CAACP,IAAR,CACE0K,wCAAwC,CAAC;AACvCF,QAAAA,UADuC;AAEvCzB,QAAAA,OAFuC;AAGvCjG,QAAAA;AAHuC,OAAD,CAD1C;AAOA;AACD;;AACDuH,IAAAA,kBAAkB,CAACE,iBAAD,CAAlB,GAAwCC,UAAxC;AACD,GAtCD;AAwCA,SAAOjB,WAAW,CAACc,kBAAD,CAAlB;AACD,CA5CD;;AA8CA,MAAMD,eAAe,GAAG,CAACnC,MAAD,EAASlF,OAAT,KAAqB;AAC3C,QAAM4H,gBAAgB,GAAG,EAAzB;AAEA/J,EAAAA,MAAM,CAACC,IAAP,CAAYoH,MAAZ,EAAoBnH,OAApB,CAA6BqH,cAAD,IAAoB;AAC9C,UAAME,aAAa,GAAGJ,MAAM,CAACE,cAAD,CAA5B;AACA,UAAMyC,QAAQ,GAAGrD,gBAAgB,CAACY,cAAD,EAAiBpF,OAAjB,CAAjC;;AACA,QAAI6H,QAAQ,KAAK,IAAjB,EAAuB;AACrBrK,MAAAA,OAAO,CAACP,IAAR,CACE6K,8BAA8B,CAAC;AAC7BjC,QAAAA,KAAK,EAAET,cADsB;AAE7BpF,QAAAA;AAF6B,OAAD,CADhC;AAMA;AACD;;AACD,UAAM+H,oBAAoB,GAAGX,iBAAiB,CAAC9B,aAAD,EAAgBtF,OAAhB,CAA9C;AACA4H,IAAAA,gBAAgB,CAACC,QAAD,CAAhB,GAA6BE,oBAA7B;AACD,GAdD;AAgBA,SAAOnB,UAAU,CAACgB,gBAAD,CAAjB;AACD,CApBD;;AAsBA,MAAMT,iCAAiC,GAAG,CAAC;AACzCnH,EAAAA;AADyC,CAAD,KAEnC;AACP;AACA,EAAEA,OAAQ,EAJV;;AAMA,MAAMuH,6BAA6B,GAAG,CAAC;AACrCxH,EAAAA,SADqC;AAErCiG,EAAAA;AAFqC,CAAD,KAG/B;AACP;AACA,EAAEA,OAAQ;AACV;AACA,EAAEjG,SAAU,EAPZ;;AASA,MAAM2H,+BAA+B,GAAG,CAAC;AACvC1B,EAAAA,OADuC;AAEvChG,EAAAA,OAFuC;AAGvCD,EAAAA;AAHuC,CAAD,KAIjC;AACP;AACA,EAAEiG,OAAQ;AACV;AACA,EAAEhG,OAAQ;AACV;AACA,EAAED,SAAU,EAVZ;;AAYA,MAAM4H,wCAAwC,GAAG,CAAC;AAChDK,EAAAA,UADgD;AAEhDhC,EAAAA,OAFgD;AAGhDjG,EAAAA;AAHgD,CAAD,KAI1C;AACP;AACA,EAAEiI,UAAW;AACb;AACA,EAAEhC,OAAQ;AACV;AACA,EAAEjG,SAAU,EAVZ;;AAYA,MAAM+H,8BAA8B,GAAG,CAAC;AACtCjC,EAAAA,KADsC;AAEtC7F,EAAAA;AAFsC,CAAD,KAGhC;AACP;AACA,EAAE6F,KAAM;AACR;AACA,EAAE7F,OAAQ,EAPV;;AC3IO,MAAMiI,mBAAmB,GAAIjH,QAAD,IAAc;AAC/C,QAAM4C,cAAc,GAAG5C,QAAQ,CAAC6C,WAAT,CAAqB,GAArB,CAAvB;;AACA,MAAID,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzB5C,IAAAA,QAAQ,GAAGA,QAAQ,CAACvB,KAAT,CAAemE,cAAc,GAAG,CAAhC,CAAX;AACD;;AAED,QAAMsE,YAAY,GAAGlH,QAAQ,CAAC6C,WAAT,CAAqB,GAArB,CAArB;AACA,MAAIqE,YAAY,KAAK,CAAC,CAAtB,EAAyB,OAAO,EAAP,CAPsB;;AAS/C,SAAOlH,QAAQ,CAACvB,KAAT,CAAeyI,YAAf,CAAP;AACD,CAVM;;ACKA,MAAMC,aAAa,GAAG,CAAC;AAC5BpI,EAAAA,SAD4B;AAE5B4E,EAAAA,QAF4B;AAG5BE,EAAAA,SAH4B;AAI5BuD,EAAAA,gBAAgB,GAAG,KAJS;AAK5BtD,EAAAA,wBAL4B;AAM5BC,EAAAA,eAAe,GAAG,MAAM;AANI,CAAD,KAOvB;AACJ,MAAIzG,GAAJ;;AACA,MAAIuG,SAAJ,EAAe;AACbvG,IAAAA,GAAG,GAAGsG,cAAc,CAAC;AACnBC,MAAAA,SADmB;AAEnB9E,MAAAA,SAFmB;AAGnB4E,MAAAA,QAHmB;AAInBG,MAAAA,wBAJmB;AAKnBC,MAAAA;AALmB,KAAD,CAApB;AAOD,GARD,MAQO;AACLzG,IAAAA,GAAG,GAAGwB,UAAU,CAACC,SAAD,EAAY4E,QAAZ,CAAhB;AACD;;AAED,MAAIyD,gBAAJ,EAAsB;AACpB9J,IAAAA,GAAG,GAAG+J,qBAAqB,CAAC;AAAE/J,MAAAA,GAAF;AAAOqG,MAAAA,QAAP;AAAiByD,MAAAA;AAAjB,KAAD,CAA3B;AACD;;AAED,SAAO9J,GAAP;AACD,CA1BM;;AA4BP,MAAM+J,qBAAqB,GAAG,CAAC;AAAE/J,EAAAA,GAAF;AAAOqG,EAAAA,QAAP;AAAiByD,EAAAA;AAAjB,CAAD,KAAyC;AACrE,MAAIjF,aAAa,CAAC7E,GAAD,CAAb,CAAmBC,QAAnB,CAA4B,GAA5B,CAAJ,EAAsC;AACpC,WAAOD,GAAP;AACD;;AAED,MAAI,OAAO8J,gBAAP,KAA4B,QAAhC,EAA0C;AACxC,UAAME,SAAS,GAAGL,mBAAmB,CAAC3J,GAAD,CAArC;;AACA,QAAIgK,SAAS,KAAK,EAAlB,EAAsB;AACpB,aAAQ,GAAEhK,GAAI,GAAE8J,gBAAiB,EAAjC;AACD;;AACD,WAAO9J,GAAP;AACD;;AAED,MAAI8J,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,UAAME,SAAS,GAAGL,mBAAmB,CAAC3J,GAAD,CAArC;;AACA,QAAIgK,SAAS,KAAK,EAAd,IAAoB3D,QAAxB,EAAkC;AAChC,YAAM4D,gBAAgB,GAAGpF,aAAa,CAACwB,QAAD,CAAtC;AACA,YAAM6D,iBAAiB,GAAGP,mBAAmB,CAACM,gBAAD,CAA7C;AACA,aAAQ,GAAEjK,GAAI,GAAEkK,iBAAkB,EAAlC;AACD;AACF;;AAED,SAAOlK,GAAP;AACD,CAvBD;;ACvBO,MAAMmK,qBAAqB,GAAG,CAAC;AACpCC,EAAAA,MADoC;AAEpCC,EAAAA,mBAFoC;AAGpCC,EAAAA;AAHoC,CAAD,KAI/B;AACJ,MAAI,OAAOA,wBAAP,KAAoC,WAAxC,EAAqD;AACnD,WAAO,IAAP;AACD;;AACD,MAAI,OAAOA,wBAAP,KAAoC,QAAxC,EAAkD;AAChD,UAAM,IAAInK,SAAJ,CACH,kDAAiDmK,wBAAyB,EADvE,CAAN;AAGD;;AACD,QAAMC,gBAAgB,GAAGC,kBAAkB,CACzCF,wBADyC,EAEzCD,mBAFyC,CAA3C;;AAIA,MAAI,CAACjI,aAAa,CAACmI,gBAAD,EAAmBF,mBAAnB,CAAlB,EAA2D;AACzDD,IAAAA,MAAM,CAACzL,IAAP,CAAa;AACjB;AACA,EAAEsC,mBAAmB,CAACsJ,gBAAD,CAAmB;AACxC;AACA,EAAEtJ,mBAAmB,CAACoJ,mBAAD,CAAsB,EAJvC;AAKD;;AACD,MAAII,mBAAJ;AACA,QAAMC,iBAAiB,GAAGzJ,mBAAmB,CAACsJ,gBAAD,CAA7C;;AACA,MAAI;AACFE,IAAAA,mBAAmB,GAAGE,oBAAY,CAACD,iBAAD,CAAlC;AACD,GAFD,CAEE,OAAO3J,CAAP,EAAU;AACV,QAAIA,CAAC,IAAIA,CAAC,CAAC0C,IAAF,KAAW,QAApB,EAA8B;AAC5B2G,MAAAA,MAAM,CAACxL,KAAP,CAAc,+BAA8B8L,iBAAkB,EAA9D;AACA,aAAO,IAAP;AACD;;AACD,UAAM3J,CAAN;AACD;;AACD,MAAIwF,SAAJ;;AACA,MAAI;AACF,UAAMqE,mBAAmB,GAAGnK,MAAM,CAACgK,mBAAD,CAAlC;AACAlE,IAAAA,SAAS,GAAGsE,IAAI,CAACC,KAAL,CAAWF,mBAAX,CAAZ;AACD,GAHD,CAGE,OAAO7J,CAAP,EAAU;AACV,QAAIA,CAAC,IAAIA,CAAC,CAAC0C,IAAF,KAAW,aAApB,EAAmC;AACjC2G,MAAAA,MAAM,CAACxL,KAAP,CAAc;AACpB;AACA,EAAEmC,CAAC,CAACgK,KAAM;AACV;AACA,EAAEL,iBAAkB,EAJd;AAKA,aAAO,IAAP;AACD;;AACD,UAAM3J,CAAN;AACD;;AACD,SAAO4H,kBAAkB,CAACpC,SAAD,EAAYgE,gBAAZ,CAAzB;AACD,CAnDM;;AAqDP,MAAMC,kBAAkB,GAAG,CAAC/I,SAAD,EAAY4E,QAAZ,KAAyB;AAClD,QAAMrG,GAAG,GAAGwB,YAAU,CAACC,SAAD,EAAY4E,QAAZ,CAAtB;AACA,SAAOvE,wBAAwB,CAAC9B,GAAD,EAAMqG,QAAN,CAA/B;AACD,CAHD;;AC3DO,MAAM2E,wBAAwB,GAAG,CACtCvJ,SADsC,EAEtC;AACE2I,EAAAA,MADF;AAEEC,EAAAA,mBAFF;AAGEC,EAAAA,wBAHF;AAIEW,EAAAA,sBAJF;AAKE5E,EAAAA;AALF,CAFsC,KASnC;AACH,QAAME,SAAS,GAAG4D,qBAAqB,CAAC;AACtCC,IAAAA,MADsC;AAEtCC,IAAAA,mBAFsC;AAGtCC,IAAAA;AAHsC,GAAD,CAAvC;;AAKA,MAAI;AACF,WAAOT,aAAa,CAAC;AACnBpI,MAAAA,SADmB;AAEnB4E,MAAAA,QAFmB;AAGnB;AACA;AACA;AACA;AACA;AACAE,MAAAA,SAAS,EAAEA,SAAS,IAAI,EARL;AASnBuD,MAAAA,gBAAgB,EAAEmB;AATC,KAAD,CAApB;AAWD,GAZD,CAYE,OAAOlK,CAAP,EAAU;AACV,QAAIA,CAAC,CAAC3B,OAAF,CAAUuE,QAAV,CAAmB,gBAAnB,CAAJ,EAA0C;AACxC;AACAyG,MAAAA,MAAM,CAAC3L,KAAP,CAAa,yBAAb;AACA,aAAO,IAAP;AACD,KALS;;;AAOV,UAAMsC,CAAN;AACD;AACF,CApCM;;ACJP;MAgBamK,gBAAgB,GAAG;MAEnBC,OAAO,GAAG,CACrBC,MADqB,EAErBC,IAFqB,EAGrB;AACE7M,EAAAA,QADF;AAEE6L,EAAAA,mBAFF;AAGEC,EAAAA,wBAHF;AAIEgB,EAAAA,aAAa,GAAG,IAJlB;AAKEL,EAAAA,sBAAsB,GAAG,KAL3B;AAMEM,EAAAA,IAAI,GAAG;AANT,CAHqB,KAWlB;AACHlB,EAAAA,mBAAmB,GAAG1J,8BAA8B,CAAC0J,mBAAD,CAApD;AACA,QAAMD,MAAM,GAAG7L,YAAY,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAA3B;AACA4L,EAAAA,MAAM,CAAC3L,KAAP,CAAc;AAChB;AACA;AACA,EAAE2M,MAAO;AACT;AACA,EAAEC,IAAK;AACP;AACA,EAAEpK,mBAAmB,CAACoJ,mBAAD,CAAsB,EAPzC;;AAQA,MAAIkB,IAAI,IAAIlH,4BAA4B,CAAC+G,MAAD,CAAxC,EAAkD;AAChDhB,IAAAA,MAAM,CAAC3L,KAAP,CAAc,uBAAd;AACA,WAAO;AACL+M,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AACD,QAAMhK,SAAS,GAAG2J,MAAlB;AACA,QAAM/E,QAAQ,GAAG5F,MAAM,CAACD,mBAAmB,CAAC6K,IAAD,CAApB,CAAvB;;AACA,MAAI;AACF,QAAIK,SAAS,GAAGV,wBAAwB,CAACvJ,SAAD,EAAY;AAClD2I,MAAAA,MADkD;AAElDC,MAAAA,mBAFkD;AAGlDC,MAAAA,wBAHkD;AAIlDW,MAAAA,sBAJkD;AAKlD5E,MAAAA;AALkD,KAAZ,CAAxC;;AAOA,QAAI,CAACqF,SAAL,EAAgB;AACd,aAAO;AACLF,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACDC,IAAAA,SAAS,GAAG5J,wBAAwB,CAAC4J,SAAD,EAAYrF,QAAZ,CAApC;;AACA,QAAIqF,SAAS,CAAC1K,UAAV,CAAqB,SAArB,CAAJ,EAAqC;AACnC,aAAO2K,aAAa,CAACD,SAAD,EAAY;AAC9BtB,QAAAA,MAD8B;AAE9BC,QAAAA,mBAF8B;AAG9BiB,QAAAA;AAH8B,OAAZ,CAApB;AAKD;;AACD,QAAII,SAAS,CAAC1K,UAAV,CAAqB,UAArB,KAAoC0K,SAAS,CAAC1K,UAAV,CAAqB,SAArB,CAAxC,EAAyE;AACvEoJ,MAAAA,MAAM,CAAC3L,KAAP,CAAc,+CAA8CiN,SAAU,EAAtE;AACA,aAAOE,aAAa,CAACF,SAAD,CAApB;AACD;;AACD,QAAIA,SAAS,CAAC1K,UAAV,CAAqB,OAArB,CAAJ,EAAmC;AACjCoJ,MAAAA,MAAM,CAACzL,IAAP,CACG,YAAW0M,IAAK,2EAA0ED,MAAO,IADpG;AAGD;;AACDhB,IAAAA,MAAM,CAAC3L,KAAP,CAAc,2CAA0CiN,SAAU,EAAlE;AACA,WAAOG,kBAAkB,CAACH,SAAD,CAAzB;AACD,GAjCD,CAiCE,OAAO3K,CAAP,EAAU;AACVqJ,IAAAA,MAAM,CAACxL,KAAP,CAAamC,CAAC,CAACgK,KAAf;AACA,WAAO;AACLS,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;AACF;;AAED,MAAME,aAAa,GAAG,CAAC7I,OAAD,EAAU;AAAEsH,EAAAA,MAAF;AAAUkB,EAAAA;AAAV,CAAV,KAAwC;AAC5DxI,EAAAA,OAAO,GAAI,UAAS,IAAIjC,GAAJ,CAAQiC,OAAR,EAAiBJ,QAAS,EAA9C,CAD4D;;AAE5D,QAAMoJ,WAAW,GAAGjJ,wBAAwB,CAACC,OAAD,EAAU;AACpD;AACA;AACA;AACAC,IAAAA,UAAU,EAAE;AAJwC,GAAV,CAA5C;AAMA,QAAMgJ,QAAQ,GAAG9K,mBAAmB,CAAC6B,OAAD,CAApC;;AACA,MAAI,CAACgJ,WAAL,EAAkB;AAChB1B,IAAAA,MAAM,CAAC3L,KAAP,CAAc,wBAAuBqE,OAAQ,EAA7C;AACA,WAAO;AACL0I,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,IAAI,EAAEM;AAFD,KAAP;AAID;;AACD,QAAMC,YAAY,GAAG/K,mBAAmB,CAAC6K,WAAD,CAAxC;;AACA,MAAIR,aAAa,IAAIQ,WAAW,KAAKhJ,OAArC,EAA8C;AAC5CsH,IAAAA,MAAM,CAACzL,IAAP,CACG,2BAA0BoN,QAAS;AAC1C,wBAAwBC,YAAa;AACrC;AACA,kEAJI;AAMA,WAAO;AACLR,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,IAAI,EAAEO;AAFD,KAAP;AAID;;AACD5B,EAAAA,MAAM,CAAC3L,KAAP,CAAc,oBAAmBuN,YAAa,EAA9C;AACA,SAAO;AACLR,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,IAAI,EAAEO;AAFD,GAAP;AAID,CAlCD;;AAoCA,MAAMJ,aAAa,GAAG,MAAM;AAC1B;AACA;AACA,SAAO;AACLJ,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,IAAI,EAAE;AAFD,GAAP;AAID,CAPD;;AASA,MAAMI,kBAAkB,GAAG,MAAM;AAC/B,SAAO;AACLL,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,IAAI,EAAE;AAFD,GAAP;AAID,CALD;;;;;"
}